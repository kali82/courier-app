{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/shared/error-interceptor.ts","webpack:///src/app/shared/toast.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","AuthModule","component","canActivate","ConsignmentsModule","AppRoutingModule","forRoot","imports","AppComponent","authService","autoAuthUser","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptor","next","authToken","getToken","authRequest","clone","headers","set","handle","AuthGuard","router","route","state","isAuthenticated","getIsAuth","navigate","providedIn","BACKEND_URL","apiURL","ADMIN_ID","adminId","AuthService","http","toastService","isAdmin","authStatusListener","accessToken","asObservable","login","password","authData","post","subscribe","response","showToast","message","location","reload","expiresInDuration","expiresIn","setAuthTimer","userId","checkIfAdmin","now","Date","expirationDate","getTime","refreshToken","saveAuthData","authInformation","getAuthData","clearTimeout","accessTokenTimer","clearAuthData","duration","setTimeout","refresh","refreshData","saveRefreshData","logout","sessionStorage","setItem","toISOString","removeItem","getItem","DashboardComponent","userIsAuthenticated","authListenerSubs","getAuthStatusListener","unsubscribe","HeaderComponent","getIsAdmin","getLogin","AngularMaterialModule","ErrorInterceptor","pipe","error","status","console","log","ToastService","snackBar","action","snackBarRef","open","onAction","afterDismissed","environment","production","serverUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'consignments',\n    loadChildren: () => import('./consignments/consignments.module').then(m => m.ConsignmentsModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '**',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularMaterialModule } from './material.module';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './shared/error-interceptor';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeaderComponent } from './header/header.component';\n@NgModule({\n  declarations: [AppComponent, DashboardComponent, HeaderComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAuthenticated = this.authService.getIsAuth();\n    if (!isAuthenticated) {\n      this.router.navigate(['/auth/login']);\n    }\n    return isAuthenticated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { AuthData } from './auth-data.model';\nimport { ToastService } from '../shared/toast.service';\nimport { environment } from '../../environments/environment';\n\nconst BACKEND_URL = environment.apiURL + 'user/';\nconst ADMIN_ID = environment.adminId;\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private isAuthenticated = false;\n  private isAdmin = false;\n  private accessToken: string;\n  private accessTokenTimer: any;\n  private authStatusListener = new Subject<boolean>();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  getToken() {\n    return this.accessToken;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getIsAdmin() {\n    return this.isAdmin;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(login: string, password: string) {\n    const authData: AuthData = { login: login, password: password };\n    this.http\n      .post<{ message: string }>(BACKEND_URL + 'create', authData)\n      .subscribe(\n        response => {\n          this.toastService.showToast(response.message);\n          this.router.navigate(['/']);\n        },\n        () => {\n          this.authStatusListener.next(false);\n          location.reload();\n        }\n      );\n  }\n\n  login(login: string, password: string) {\n    const authData: AuthData = { login: login, password: password };\n    this.http\n      .post<{\n        message: string;\n        userId: string;\n        accessToken: string;\n        expiresIn: number;\n        login: string;\n        refreshToken: string;\n      }>(BACKEND_URL + 'login', authData)\n      .subscribe(\n        response => {\n          const accessToken = response.accessToken;\n          this.accessToken = accessToken;\n          if (accessToken) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n\n            const userId = response.userId;\n            this.isAdmin = this.checkIfAdmin(userId);\n\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            const login = response.login;\n            const refreshToken = response.refreshToken;\n            this.saveAuthData(\n              userId,\n              accessToken,\n              expirationDate,\n              login,\n              refreshToken\n            );\n            this.authStatusListener.next(true);\n            this.toastService.showToast(response.message);\n            this.router.navigate(['/']);\n          } else {\n            this.toastService.showToast('Coś poszło nie tak!');\n          }\n        },\n        () => {\n          this.authStatusListener.next(false);\n        }\n      );\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.accessToken = authInformation.accessToken;\n      this.isAuthenticated = true;\n      const userId = authInformation.userId;\n      this.isAdmin = this.checkIfAdmin(userId);\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.accessToken = null;\n    this.isAuthenticated = false;\n    this.isAdmin = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.accessTokenTimer);\n    this.clearAuthData();\n    this.toastService.showToast('Użytkownik został wylogowany.');\n    this.router.navigate(['/auth/login']);\n  }\n\n  private setAuthTimer(duration: number) {\n    this.accessTokenTimer = setTimeout(() => {\n      this.refresh();\n    }, duration * 1000);\n  }\n\n  refresh() {\n    const authData = this.getAuthData();\n    const refreshData = {\n      userId: authData.userId,\n      refreshToken: authData.refreshToken,\n    };\n    this.http\n      .post<{\n        message: string;\n        userId: string;\n        accessToken: string;\n        expiresIn: number;\n      }>(BACKEND_URL + 'accessToken', refreshData)\n      .subscribe(\n        response => {\n          const accessToken = response.accessToken;\n          this.accessToken = accessToken;\n          if (accessToken) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            this.saveRefreshData(accessToken, expirationDate);\n            this.authStatusListener.next(true);\n            this.toastService.showToast(response.message);\n          } else {\n            this.toastService.showToast(\n              'Przedłużenie sesji użytkownika nieudane.'\n            );\n            this.logout();\n          }\n        },\n        () => {\n          this.logout();\n        }\n      );\n  }\n\n  private saveRefreshData(accessToken: string, expirationDate: Date) {\n    sessionStorage.setItem('accessToken', accessToken);\n    sessionStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  private saveAuthData(\n    userId: string,\n    accessToken: string,\n    expirationDate: Date,\n    login: string,\n    refreshToken: string\n  ) {\n    sessionStorage.setItem('userId', userId);\n    sessionStorage.setItem('accessToken', accessToken);\n    sessionStorage.setItem('expiration', expirationDate.toISOString());\n    sessionStorage.setItem('login', login);\n    sessionStorage.setItem('refreshToken', refreshToken);\n  }\n\n  private clearAuthData() {\n    sessionStorage.removeItem('userId');\n    sessionStorage.removeItem('accessToken');\n    sessionStorage.removeItem('expiration');\n    sessionStorage.removeItem('login');\n    sessionStorage.removeItem('refreshToken');\n  }\n\n  private getAuthData() {\n    const userId = sessionStorage.getItem('userId');\n    const accessToken = sessionStorage.getItem('accessToken');\n    const expirationDate = sessionStorage.getItem('expiration');\n    const login = sessionStorage.getItem('login');\n    const refreshToken = sessionStorage.getItem('refreshToken');\n    if (!userId || !accessToken || !expirationDate || !login || !refreshToken) {\n      return;\n    }\n    return {\n      userId: userId,\n      accessToken: accessToken,\n      expirationDate: new Date(expirationDate),\n      login: login,\n      refreshToken: refreshToken,\n    };\n  }\n\n  getUserId() {\n    return sessionStorage.getItem('userId');\n  }\n\n  getLogin() {\n    return sessionStorage.getItem('login');\n  }\n\n  checkIfAdmin(userId: String) {\n    // zapytanie do backendu o to czy jest adminem\n    return userId === ADMIN_ID ? true : false;\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","<h1 class=\"mat-title\" *ngIf=\"userIsAuthenticated\">\n  daszbord\n</h1>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isAuthenticated = false;\n  isAdmin = false;\n  login: String;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.isAuthenticated = this.authService.getIsAuth();\n    this.isAdmin = this.authService.getIsAdmin();\n    this.login = this.authService.getLogin();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.isAuthenticated = isAuthenticated;\n        this.isAdmin = this.authService.getIsAdmin();\n        this.login = this.authService.getLogin();\n      });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <ng-container *ngIf=\"isAuthenticated\">\n    <button\n      mat-raised-button\n      routerLink=\"/dashboard\"\n      routerLinkActive=\"mat-accent\"\n    >\n      <i class=\"material-icons\">\n        home\n      </i>\n      {{ login }} daszbord\n    </button>\n    <button\n      mat-raised-button\n      routerLink=\"/consignments\"\n      routerLinkActive=\"mat-accent\"\n    >\n      <i class=\"material-icons\">\n        view_list\n      </i>\n      przesyłki\n    </button>\n    <button\n      *ngIf=\"isAdmin\"\n      mat-raised-button\n      routerLink=\"/auth/create\"\n      routerLinkActive=\"mat-accent\"\n    >\n      <i class=\"material-icons\">\n        person_add\n      </i>\n      nowy user\n    </button>\n    <span class=\"spacer\"></span>\n    <button mat-raised-button (click)=\"onLogout()\">\n      <i class=\"material-icons\">\n        exit_to_app\n      </i>\n      wyloguj\n    </button>\n    <button mat-raised-button disabled>\n      <i class=\"material-icons\">\n        brightness_medium\n      </i>\n      <i class=\"material-icons\">\n        invert_colors\n      </i>\n      darek mode\n    </button>\n  </ng-container>\n  <button\n    *ngIf=\"!isAuthenticated\"\n    mat-raised-button\n    routerLink=\"/auth/login\"\n    routerLinkActive=\"mat-accent\"\n  >\n    <i class=\"material-icons\">\n      account_circle\n    </i>\n    logowanie\n  </button>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatGridListModule,\n    MatInputModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatSortModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ],\n  providers: [MatDatepickerModule],\n})\nexport class AngularMaterialModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ToastService } from './toast.service';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private authService: AuthService,\n    private toastService: ToastService\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 401) {\n          this.authService.refresh();\n        }\n        console.log(error);\n        const message = error.error.message;\n        message ? message : 'Wystąpił nieznany błąd.';\n        this.toastService.showToast(message);\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  showToast(message: string, action?: string, duration?: number) {\n    if (!duration) {\n      duration = 5000;\n    }\n\n    let snackBarRef = this.snackBar.open(message, action, {\n      duration: duration,\n    });\n\n    snackBarRef.onAction().subscribe(() => {\n      // wciśnięcie przycisku tosta\n    });\n\n    snackBarRef.afterDismissed().subscribe(() => {\n      // po zamknięciu tosta\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:4000/',\n  apiURL: 'http://localhost:4000/api/',\n  adminId: '5ead7ab5556feb3794d8b0a5',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}