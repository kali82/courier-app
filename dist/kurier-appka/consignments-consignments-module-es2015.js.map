{"version":3,"sources":["./src/app/consignments/consignment-create/consignment-create.component.ts","./src/app/consignments/consignment-create/consignment-create.component.html","./src/app/consignments/consignment-list/cdk-detail-row.directive.ts","./src/app/consignments/consignment-list/consignment-list.component.ts","./src/app/consignments/consignment-list/consignment-list.component.html","./src/app/consignments/consignment-list/polish-paginator-intl.ts","./src/app/consignments/consignment-show/consignment-show.component.ts","./src/app/consignments/consignment-show/consignment-show.component.html","./src/app/consignments/consignments-routing.module.ts","./src/app/consignments/consignments.component.ts","./src/app/consignments/consignments.module.ts","./src/app/consignments/consignments.service.ts"],"names":[],"mappings":"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","file":"consignments-consignments-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { ToastService } from '../../shared/toast.service';\nimport { ConsignmentsService } from '../consignments.service';\nimport { Consignment } from '../model/consignment.model';\nimport { Service } from '../model/service.model';\nimport { ShipperAddress } from '../model/shipper-address.model';\nimport { ReceiverAddress } from '../model/receiver-address.model';\nimport { Piece } from '../model/piece.model';\n\n@Component({\n  templateUrl: './consignment-create.component.html',\n  styleUrls: ['./consignment-create.component.css'],\n})\nexport class ConsignmentCreateComponent implements OnInit, OnDestroy {\n  ivState = false;\n  cvState = false;\n  cmState = false;\n  cnState = false;\n  qState = false;\n  hState = false;\n  lState = false;\n  wiState = false;\n  weState = false;\n  tState = false;\n  rceState = false;\n  rcState = false;\n  rcpState = false;\n  rcphState = false;\n  rpchState = false;\n  rpcState = false;\n  raState = false;\n  rhState = false;\n  rsState = false;\n  rnState = false;\n  cState = false;\n  sceState = false;\n  scphState = false;\n  scpState = false;\n  scState = false;\n  spcState = false;\n  saState = false;\n  ssState = false;\n  shState = false;\n  snState = false;\n  sdState = false;\n\n  isLoading = false;\n  form: FormGroup;\n  today = new Date();\n  tomorrow = new Date(this.today.setDate(this.today.getDate() + 1));\n  in3days = new Date(this.today.setDate(this.today.getDate() + 2));\n  minDate = new Date(\n    this.tomorrow.getFullYear(),\n    this.tomorrow.getMonth(),\n    this.tomorrow.getDate()\n  );\n  maxDate = new Date(\n    this.in3days.getFullYear(),\n    this.in3days.getMonth(),\n    this.in3days.getDate()\n  );\n  private authStatusSub: Subscription;\n  weightControl;\n  widthControl;\n  lengthControl;\n  heightControl;\n  weight;\n  width;\n  length;\n  height;\n  wMax: number;\n  lMax: number;\n  hMax: number;\n  size;\n  MAX_WEIGHT = 31;\n  LONG = 120;\n  SHORT = 60;\n  LARGE = 76;\n  SMALL = 36;\n  HEAVY = 10.1;\n  LIGHT = 1.1;\n\n  constructor(\n    public consignmentsService: ConsignmentsService,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n    this.setPieceValidators();\n    this.setServiceValidators();\n\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  trimDoubleSpace(string) {\n    return string.replace(/\\s\\s+/g, ' ');\n  }\n\n  trimDoubleSpaceAndNumber(string) {\n    return this.trimDoubleSpace(string.replace(/\\d+/g, ''));\n  }\n\n  trimDoubleSpaceAndNotNumber(number) {\n    return this.trimDoubleSpace(number.replace(/\\D+/g, ''));\n  }\n\n  trimComma(number) {\n    return number.replace(/\\D+/g, '');\n  }\n\n  formatPostalCode(postalCode) {\n    if (postalCode.length < 4) postalCode = postalCode.replace(/\\D+/g, '');\n    if (postalCode.length == 2) postalCode = postalCode.concat('-');\n    if (postalCode.length > 2) {\n      postalCode = postalCode.replace(\n        /\\d\\d-\\d?\\d?\\D/g,\n        postalCode.substring(0, postalCode.length - 1)\n      );\n    }\n\n    return postalCode;\n  }\n\n  maxTenDigit(apartment) {\n    if (apartment.length > 10) apartment = apartment.substring(0, 10);\n\n    return apartment;\n  }\n\n  createForm() {\n    this.form = new FormGroup({\n      payerType: new FormControl('SHIPPER', {\n        validators: [Validators.required],\n      }),\n      shipmentDate: new FormControl(null, {\n        validators: [Validators.required],\n      }),\n      shipperName: new FormControl('aaaaa', {\n        validators: [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(60),\n        ],\n      }),\n      shipperPostalCode: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.pattern('[0-9]{2}-[0-9]{3}'),\n        ],\n      }),\n      shipperCity: new FormControl('aaa', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(17),\n        ],\n      }),\n      shipperStreet: new FormControl('aaa', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(35),\n        ],\n      }),\n      shipperHouseNumber: new FormControl('aaa', {\n        validators: [Validators.required, Validators.maxLength(10)],\n      }),\n      shipperApartmentNumber: new FormControl(null, {\n        validators: [Validators.maxLength(10)],\n      }),\n      shipperContactPerson: new FormControl(null, {\n        validators: [Validators.maxLength(60)],\n      }),\n      shipperContactPhone: new FormControl(null, {\n        validators: [Validators.maxLength(20)],\n      }),\n      shipperContactEmail: new FormControl(null, {\n        validators: [Validators.email, Validators.maxLength(60)],\n      }),\n      country: new FormControl('PL', {\n        validators: [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(2),\n        ],\n      }),\n      receiverName: new FormControl('bbbbb', {\n        validators: [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(60),\n        ],\n      }),\n      receiverPostalCode: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.pattern('[0-9]{2}-[0-9]{3}'),\n        ],\n      }),\n      receiverCity: new FormControl('bbb', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(17),\n        ],\n      }),\n      receiverStreet: new FormControl('bbb', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(35),\n        ],\n      }),\n      receiverHouseNumber: new FormControl('bbb', {\n        validators: [Validators.required, Validators.maxLength(10)],\n      }),\n      receiverApartmentNumber: new FormControl(null, {\n        validators: [Validators.maxLength(10)],\n      }),\n      receiverContactPerson: new FormControl(null, {\n        validators: [Validators.maxLength(60)],\n      }),\n      receiverContactPhone: new FormControl(null, {\n        validators: [Validators.maxLength(20)],\n      }),\n      receiverContactEmail: new FormControl(null, {\n        validators: [Validators.email, Validators.maxLength(60)],\n      }),\n      type: new FormControl(`ENVELOPE`, { validators: [Validators.required] }),\n      weight: new FormControl({ value: null, disabled: true }),\n      width: new FormControl({ value: null, disabled: true }),\n      length: new FormControl({ value: null, disabled: true }),\n      height: new FormControl({ value: null, disabled: true }),\n      quantity: new FormControl(1, {\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      nonStandard: new FormControl(null),\n      content: new FormControl('XXX', {\n        validators: [Validators.required, Validators.maxLength(30)],\n      }),\n      comment: new FormControl(null, {\n        validators: [Validators.maxLength(100)],\n      }),\n      CoD: new FormControl(false),\n      CoDValue: new FormControl({ value: null, disabled: true }),\n      insurance: new FormControl(false),\n      insuranceValue: new FormControl({ value: null, disabled: true }),\n    });\n  }\n\n  weekendFilter = (date: Date): boolean => {\n    const day = date.getDay();\n    const saturday = 6;\n    const sunday = 0;\n\n    return day !== saturday && day !== sunday;\n  };\n\n  formatDateForUser(date: Date): string {\n    const day = date\n      .getDate()\n      .toString()\n      .padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    return day + '-' + month + '-' + year;\n  }\n\n  formatDateForDhlApi(date: Date): string {\n    const day = date\n      .getDate()\n      .toString()\n      .padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    return year + '-' + month + '-' + day;\n  }\n\n  setPieceValidators() {\n    const typeControl = this.form.get('type');\n    this.weightControl = this.form.get('weight');\n    this.widthControl = this.form.get('width');\n    this.lengthControl = this.form.get('length');\n    this.heightControl = this.form.get('height');\n\n    typeControl.valueChanges.subscribe((type: string) => {\n      if (type === 'ENVELOPE') {\n        this.weightControl.setValue(null);\n        this.weightControl.disable();\n        this.widthControl.setValue(null);\n        this.widthControl.disable();\n        this.lengthControl.setValue(null);\n        this.lengthControl.disable();\n        this.heightControl.setValue(null);\n        this.heightControl.disable();\n      } else if (type === 'PACKAGE' || type === 'PALLETTE') {\n        this.wMax = this.LONG;\n        this.lMax = this.LONG;\n        this.hMax = this.LONG;\n\n        this.weightControl.enable();\n        this.weightControl.setValidators([\n          Validators.required,\n          Validators.max(this.MAX_WEIGHT),\n        ]);\n        this.setWeightListener();\n\n        this.widthControl.enable();\n        this.lengthControl.enable();\n        this.heightControl.enable();\n        this.setDimensionsValidators();\n      }\n    });\n  }\n\n  setDimensionsValidators() {\n    this.widthControl.valueChanges.subscribe((width: number) => {\n      if (width > this.SHORT) {\n        if (\n          this.lengthControl.value <= this.SHORT &&\n          this.heightControl.value <= this.SHORT\n        ) {\n          this.wMax = this.LONG;\n          this.lMax = this.SHORT;\n          this.hMax = this.SHORT;\n        } else {\n          this.wMax = this.SHORT;\n          if (this.lengthControl.value > this.SHORT) {\n            this.lMax = this.LONG;\n            this.hMax = this.SHORT;\n          } else if (this.heightControl.value > this.SHORT) {\n            this.lMax = this.SHORT;\n            this.hMax = this.LONG;\n          }\n        }\n      } else {\n        if (this.lengthControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.LONG;\n          this.hMax = this.SHORT;\n        } else if (this.heightControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.SHORT;\n          this.hMax = this.LONG;\n        } else {\n          this.wMax = this.LONG;\n          this.lMax = this.LONG;\n          this.hMax = this.LONG;\n        }\n      }\n      this.updateDimensionsValidators();\n    });\n\n    this.lengthControl.valueChanges.subscribe((length: number) => {\n      if (length > this.SHORT) {\n        if (\n          this.widthControl.value <= this.SHORT &&\n          this.heightControl.value <= this.SHORT\n        ) {\n          this.wMax = this.SHORT;\n          this.lMax = this.LONG;\n          this.hMax = this.SHORT;\n        } else {\n          this.lMax = this.SHORT;\n          if (this.widthControl.value > this.SHORT) {\n            this.wMax = this.LONG;\n            this.hMax = this.SHORT;\n          } else if (this.heightControl.value > this.SHORT) {\n            this.wMax = this.SHORT;\n            this.hMax = this.LONG;\n          }\n        }\n      } else {\n        if (this.widthControl.value > this.SHORT) {\n          this.wMax = this.LONG;\n          this.lMax = this.SHORT;\n          this.hMax = this.SHORT;\n        } else if (this.heightControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.SHORT;\n          this.hMax = this.LONG;\n        } else {\n          this.wMax = this.LONG;\n          this.lMax = this.LONG;\n          this.hMax = this.LONG;\n        }\n      }\n      this.updateDimensionsValidators();\n    });\n\n    this.heightControl.valueChanges.subscribe((height: number) => {\n      if (height > this.SHORT) {\n        if (\n          this.widthControl.value <= this.SHORT &&\n          this.lengthControl.value <= this.SHORT\n        ) {\n          this.wMax = this.SHORT;\n          this.lMax = this.SHORT;\n          this.hMax = this.LONG;\n        } else {\n          this.hMax = this.SHORT;\n          if (this.widthControl.value > this.SHORT) {\n            this.wMax = this.LONG;\n            this.lMax = this.SHORT;\n          } else if (this.lengthControl.value > this.SHORT) {\n            this.wMax = this.SHORT;\n            this.lMax = this.LONG;\n          }\n        }\n      } else {\n        if (this.widthControl.value > this.SHORT) {\n          this.wMax = this.LONG;\n          this.lMax = this.SHORT;\n          this.hMax = this.SHORT;\n        } else if (this.lengthControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.LONG;\n          this.hMax = this.SHORT;\n        } else {\n          this.wMax = this.LONG;\n          this.lMax = this.LONG;\n          this.hMax = this.LONG;\n        }\n      }\n      this.updateDimensionsValidators();\n    });\n  }\n\n  updateDimensionsValidators() {\n    this.updateDimensionValidators(this.widthControl, this.wMax);\n    this.updateDimensionValidators(this.lengthControl, this.lMax);\n    this.updateDimensionValidators(this.heightControl, this.hMax);\n    this.determineSize();\n  }\n\n  updateDimensionValidators(dimensionControl, maxValue) {\n    dimensionControl.setValidators([\n      Validators.required,\n      Validators.max(maxValue),\n    ]);\n    dimensionControl.updateValueAndValidity({ emitEvent: false });\n  }\n\n  setWeightListener() {\n    this.weightControl.valueChanges.subscribe((weight: number) => {\n      this.weightControl.updateValueAndValidity({ emitEvent: false });\n      this.determineSize();\n    });\n  }\n\n  determineSize() {\n    this.weight = this.weightControl.value;\n    this.width = this.widthControl.value;\n    this.length = this.lengthControl.value;\n    this.height = this.heightControl.value;\n\n    if (this.weight && this.width && this.length && this.height) {\n      let min =\n        this.width < this.length\n          ? this.width < this.height\n            ? this.width\n            : this.height\n          : this.length < this.height\n          ? this.length\n          : this.height;\n      let max =\n        this.width > this.length\n          ? this.width > this.height\n            ? this.width\n            : this.height\n          : this.length > this.height\n          ? this.length\n          : this.height;\n      if (this.weight < this.LIGHT && min + max < this.SMALL) {\n        this.size = 'super lekka';\n      } else if (this.weight < this.HEAVY && min + max < this.LARGE) {\n        this.size = 'lekka';\n      } else {\n        this.size = 'ciężka';\n      }\n    } else {\n      this.size = null;\n    }\n  }\n\n  setServiceValidators() {\n    const CoD = this.form.get('CoD');\n    const CoDValue = this.form.get('CoDValue');\n\n    CoD.valueChanges.subscribe((selected: boolean) => {\n      if (selected) {\n        CoDValue.enable();\n        CoDValue.setValidators([\n          Validators.required,\n          Validators.min(1),\n          Validators.max(insuranceValue.value),\n        ]);\n        insurance.setValue(true);\n        insurance.setValidators(Validators.required);\n        insuranceValue.updateValueAndValidity;\n      } else if (!selected) {\n        CoDValue.setValue(null);\n        CoDValue.disable();\n        insurance.clearValidators();\n      }\n      CoDValue.updateValueAndValidity;\n      insurance.updateValueAndValidity;\n    });\n\n    CoDValue.valueChanges.subscribe((value: number) => {\n      if (value > insuranceValue.value) {\n        insuranceValue.setValue(value);\n      }\n      insuranceValue.setValidators([\n        Validators.required,\n        Validators.min(CoDValue.value),\n        Validators.max(11000),\n      ]);\n      insuranceValue.updateValueAndValidity;\n    });\n\n    const insurance = this.form.get('insurance');\n    const insuranceValue = this.form.get('insuranceValue');\n\n    insurance.valueChanges.subscribe((selected: boolean) => {\n      if (selected) {\n        insuranceValue.enable();\n        insuranceValue.setValidators([\n          Validators.required,\n          Validators.min(CoDValue.value),\n          Validators.max(11000),\n        ]);\n      } else if (!selected) {\n        if (!selected && CoD.value) {\n          CoD.setValue(false);\n        }\n        insuranceValue.setValue(null);\n        insuranceValue.disable();\n        CoD.updateValueAndValidity;\n      }\n      insuranceValue.updateValueAndValidity;\n    });\n  }\n\n  onCreate() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n\n    const userId = this.authService.getUserId();\n    const login = this.authService.getLogin();\n    const form = this.form.value;\n    const payerType: string = form.payerType;\n    const pickedDate: Date = form.shipmentDate;\n    const shipmentDateTime = new Date(\n      pickedDate.getFullYear(),\n      pickedDate.getMonth(),\n      pickedDate.getDate(),\n      new Date().getHours(),\n      new Date().getMinutes(),\n      new Date().getSeconds()\n    ).toLocaleString('pl-PL');\n    const shipmentDate: string = this.formatDateForDhlApi(pickedDate);\n    const service: Service = {\n      CoD: form.CoD ? form.CoD : '',\n      CoDValue: form.CoDValue ? form.CoDValue : '',\n      insurance: form.insurance ? form.insurance : '',\n      insuranceValue: form.insuranceValue ? form.insuranceValue : '',\n    };\n    const shipper: ShipperAddress = {\n      name: form.shipperName,\n      postalCode: form.shipperPostalCode.replace('-', ''),\n      city: form.shipperCity,\n      street: form.shipperStreet,\n      houseNumber: form.shipperHouseNumber,\n      apartmentNumber: form.shipperApartmentNumber\n        ? form.shipperApartmentNumber.toString()\n        : '',\n      contactPerson: form.shipperContactPerson ? form.shipperContactPerson : '',\n      contactPhone: form.shipperContactPhone ? form.shipperContactPhone : '',\n      contactEmail: form.shipperContactEmail ? form.shipperContactEmail : '',\n    };\n    const receiver: ReceiverAddress = {\n      country: form.country,\n      name: form.receiverName,\n      postalCode: form.receiverPostalCode.replace('-', ''),\n      city: form.receiverCity,\n      street: form.receiverStreet,\n      houseNumber: form.receiverHouseNumber,\n      apartmentNumber: form.receiverApartmentNumber\n        ? form.receiverApartmentNumber.toString()\n        : '',\n      contactPerson: form.receiverContactPerson\n        ? form.receiverContactPerson\n        : '',\n      contactPhone: form.receiverContactPhone ? form.receiverContactPhone : '',\n      contactEmail: form.receiverContactEmail ? form.receiverContactEmail : '',\n    };\n    const piece: Piece = {\n      type: form.type,\n      weight: form.weight ? form.weight : '',\n      width: form.width ? form.width : '',\n      length: form.length ? form.length : '',\n      height: form.height ? form.height : '',\n      quantity: form.quantity,\n      nonStandard: form.nonStandard ? true : false,\n    };\n    const comment: string = form.comment ? form.comment : '';\n    const content: string = form.content;\n    const consignment: Consignment = {\n      userId: userId,\n      login: login,\n      shipper: shipper,\n      receiver: receiver,\n      piece: piece,\n      payerType: payerType,\n      service: service,\n      shipmentDate: shipmentDate,\n      comment: comment,\n      content: content,\n      shipmentDateTime: shipmentDateTime,\n    };\n    this.consignmentsService.createConsignment(consignment).then(response => {\n      this.isLoading = false;\n      if (response.status === 400) {\n        this.toastService.showToast('Coś poszło nie tak   ; /');\n      } else {\n        this.form.reset();\n        const consignmentId = response.consignmentId;\n        this.toastService.showToast(response.message);\n        this.router.navigate(['consignments', consignmentId]);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<h1 class=\"mat-title\">nowa przesyłka krajowa</h1>\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<form\n  id=\"newConsignment\"\n  [formGroup]=\"form\"\n  (submit)=\"onCreate()\"\n  *ngIf=\"!isLoading\"\n>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>płatnik</mat-label>\n    <mat-select formControlName=\"payerType\">\n      <!-- to jako enum, do klasy -->\n      <mat-option value=\"SHIPPER\">nadawca</mat-option>\n      <mat-option value=\"RECEIVER\">odbiorca</mat-option>\n      <mat-option value=\"USER\">trzecia strona?</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"form.get('payerType').invalid && form.get('payerType').touched\"\n      >pole wymaga wyboru</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>data nadania</mat-label>\n    <!-- do poprawy format daty z MM/DD/RRRR na DD/MM/RRRR! -->\n    <input\n      matInput\n      [matDatepicker]=\"picker\"\n      formControlName=\"shipmentDate\"\n      [min]=\"minDate\"\n      [max]=\"maxDate\"\n      [matDatepickerFilter]=\"weekendFilter\"\n      (focus)=\"sdState = true\"\n      (focusout)=\"sdState = false\"\n      class=\"number\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n    <mat-error\n      *ngIf=\"\n        form.get('shipmentDate').invalid && form.get('shipmentDate').touched\n      \"\n      >wymagana data od {{ this.formatDateForUser(minDate) }} do\n      {{ this.formatDateForUser(maxDate) }}, format: M/D/RRRR</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">nadawca:</h3>\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>nazwa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperName\"\n      #shipperName\n      maxlength=\"60\"\n      (keyup)=\"shipperName.value = trimDoubleSpace(shipperName.value)\"\n      (focus)=\"snState = true\"\n      (focusout)=\"snState = false\"\n    />\n    <mat-hint *ngIf=\"snState\" align=\"end\"\n      >{{ shipperName.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperName').invalid &&\n        form.get('shipperName').touched &&\n        !snState\n      \"\n      >min. 5, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>ulica</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperStreet\"\n      #shipperStreet\n      maxlength=\"35\"\n      (keyup)=\"shipperStreet.value = trimDoubleSpace(shipperStreet.value)\"\n      (focus)=\"ssState = true\"\n      (focusout)=\"ssState = false\"\n    />\n    <mat-hint *ngIf=\"ssState\" align=\"end\"\n      >{{ shipperStreet.value?.length || 0 }}/35 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperStreet').invalid &&\n        form.get('shipperStreet').touched &&\n        !ssState\n      \"\n      >min. 3, max. 35 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>dom</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperHouseNumber\"\n      #shipperHouseNumber\n      maxlength=\"10\"\n      (keyup)=\"\n        shipperHouseNumber.value = trimDoubleSpace(shipperHouseNumber.value)\n      \"\n      (focus)=\"shState = true\"\n      (focusout)=\"shState = false\"\n    />\n    <mat-hint *ngIf=\"shState\" align=\"end\"\n      >{{ shipperHouseNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperHouseNumber').invalid &&\n        form.get('shipperHouseNumber').touched &&\n        !ssState\n      \"\n      >min. 1, max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>lokal</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      min=\"1\"\n      formControlName=\"shipperApartmentNumber\"\n      #shipperApartmentNumber\n      (keyup)=\"\n        shipperApartmentNumber.value = maxTenDigit(shipperApartmentNumber.value)\n      \"\n      (focus)=\"saState = true\"\n      (focusout)=\"saState = false\"\n    />\n    <mat-hint *ngIf=\"saState\" align=\"end\"\n      >{{ shipperApartmentNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperApartmentNumber').invalid &&\n        form.get('shipperApartmentNumber').touched &&\n        !saState\n      \"\n      >max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kod pocztowy</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"shipperPostalCode\"\n      #shipperPostalCode\n      maxlength=\"6\"\n      (keydown)=\"\n        shipperPostalCode.value = formatPostalCode(shipperPostalCode.value)\n      \"\n      (keyup)=\"\n        shipperPostalCode.value = formatPostalCode(shipperPostalCode.value)\n      \"\n      (focus)=\"spcState = true\"\n      (focusout)=\"spcState = false\"\n    />\n    <mat-hint *ngIf=\"spcState\" align=\"end\">format: 12-345</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('shipperPostalCode').invalid &&\n        form.get('shipperPostalCode').touched &&\n        !spcState\n      \"\n      >format: 12-345</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>miejscowość</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperCity\"\n      #shipperCity\n      maxlength=\"17\"\n      (keyup)=\"shipperCity.value = trimDoubleSpaceAndNumber(shipperCity.value)\"\n      (focus)=\"scState = true\"\n      (focusout)=\"scState = false\"\n    />\n    <mat-hint *ngIf=\"scState\" align=\"end\"\n      >{{ shipperCity.value?.length || 0 }}/17 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperCity').invalid &&\n        form.get('shipperCity').touched &&\n        !scState\n      \"\n      >min. 3, max. 17 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>osoba kontaktowa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperContactPerson\"\n      #shipperContactPerson\n      maxlength=\"60\"\n      (keyup)=\"\n        shipperContactPerson.value = trimDoubleSpace(shipperContactPerson.value)\n      \"\n      (focus)=\"scpState = true\"\n      (focusout)=\"scpState = false\"\n    />\n    <mat-hint *ngIf=\"scpState\" align=\"end\"\n      >{{ shipperContactPerson.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperContactPerson').invalid &&\n        form.get('shipperContactPerson').touched &&\n        !scpState\n      \"\n      >max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>telefon</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"shipperContactPhone\"\n      #shipperContactPhone\n      maxlength=\"20\"\n      (keyup)=\"\n        shipperContactPhone.value = trimDoubleSpaceAndNotNumber(\n          shipperContactPhone.value\n        )\n      \"\n      (focus)=\"scphState = true\"\n      (focusout)=\"scphState = false\"\n    />\n    <mat-hint *ngIf=\"scphState\" align=\"end\"\n      >{{ shipperContactPhone.value?.length || 0 }}/20 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperContactPhone').invalid &&\n        form.get('shipperContactPhone').touched &&\n        !scphState\n      \"\n      >max. 20 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>email</mat-label>\n    <input\n      matInput\n      type=\"email\"\n      formControlName=\"shipperContactEmail\"\n      #shipperContactEmail\n      maxlength=\"60\"\n      (focus)=\"sceState = true\"\n      (focusout)=\"sceState = false\"\n    />\n    <mat-hint *ngIf=\"sceState\" align=\"end\"\n      >{{ shipperContactEmail.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperContactEmail').invalid &&\n        form.get('shipperContactEmail').touched &&\n        !sceState\n      \"\n      >format: email, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">odbiorca:</h3>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kraj</mat-label>\n    <mat-select\n      formControlName=\"country\"\n      #country\n      (focus)=\"cState = true\"\n      (focusout)=\"cState = false\"\n    >\n      <mat-option value=\"PL\">Polska</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        form.get('country').invalid && form.get('country').touched && !cState\n      \"\n      >pole wymaga wyboru</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>nazwa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverName\"\n      #receiverName\n      maxlength=\"60\"\n      (keyup)=\"receiverName.value = trimDoubleSpace(receiverName.value)\"\n      (focus)=\"rnState = true\"\n      (focusout)=\"rnState = false\"\n    />\n    <mat-hint *ngIf=\"rnState\" align=\"end\"\n      >{{ receiverName.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverName').invalid &&\n        form.get('receiverName').touched &&\n        !rnState\n      \"\n      >min. 5, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>ulica</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverStreet\"\n      #receiverStreet\n      maxlength=\"35\"\n      (keyup)=\"receiverStreet.value = trimDoubleSpace(receiverStreet.value)\"\n      (focus)=\"rsState = true\"\n      (focusout)=\"rsState = false\"\n    />\n    <mat-hint *ngIf=\"rsState\" align=\"end\"\n      >{{ receiverStreet.value?.length || 0 }}/35 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverStreet').invalid &&\n        form.get('receiverStreet').touched &&\n        !rsState\n      \"\n      >min. 3, max. 35 znakóww</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>dom</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverHouseNumber\"\n      #receiverHouseNumber\n      maxlength=\"10\"\n      (keyup)=\"\n        receiverHouseNumber.value = trimDoubleSpace(receiverHouseNumber.value)\n      \"\n      (focus)=\"rhState = true\"\n      (focusout)=\"rhState = false\"\n    />\n    <mat-hint *ngIf=\"rhState\" align=\"end\"\n      >{{ receiverHouseNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverHouseNumber').invalid &&\n        form.get('receiverHouseNumber').touched &&\n        !rhState\n      \"\n      >min. 1, max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>lokal</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      min=\"1\"\n      formControlName=\"receiverApartmentNumber\"\n      #receiverApartmentNumber\n      (keyup)=\"\n        receiverApartmentNumber.value = maxTenDigit(\n          receiverApartmentNumber.value\n        )\n      \"\n      (focus)=\"raState = true\"\n      (focusout)=\"raState = false\"\n    />\n    <mat-hint *ngIf=\"raState\" align=\"end\"\n      >{{ receiverApartmentNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverApartmentNumber').invalid &&\n        form.get('receiverApartmentNumber').touched &&\n        !raState\n      \"\n      >max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kod pocztowy</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"receiverPostalCode\"\n      #receiverPostalCode\n      maxlength=\"6\"\n      (keydown)=\"\n        receiverPostalCode.value = formatPostalCode(receiverPostalCode.value)\n      \"\n      (keyup)=\"\n        receiverPostalCode.value = formatPostalCode(receiverPostalCode.value)\n      \"\n      (focus)=\"rpcState = true\"\n      (focusout)=\"rpcState = false\"\n    />\n    <mat-hint *ngIf=\"rpcState\" align=\"end\">format: 12-345</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('receiverPostalCode').invalid &&\n        form.get('receiverPostalCode').touched &&\n        !rpcState\n      \"\n      >format: 12-345</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>miejscowość</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverCity\"\n      #receiverCity\n      maxlength=\"17\"\n      (keyup)=\"\n        receiverCity.value = trimDoubleSpaceAndNumber(receiverCity.value)\n      \"\n      (focus)=\"rcState = true\"\n      (focusout)=\"rcState = false\"\n    />\n    <mat-hint *ngIf=\"rcState\" align=\"end\"\n      >{{ receiverCity.value?.length || 0 }}/17 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverCity').invalid &&\n        form.get('receiverCity').touched &&\n        !rcState\n      \"\n      >min. 3, max. 17 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>osoba kontaktowa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverContactPerson\"\n      #receiverContactPerson\n      maxlength=\"60\"\n      (keyup)=\"\n        receiverContactPerson.value = trimDoubleSpace(\n          receiverContactPerson.value\n        )\n      \"\n      (focus)=\"rcpState = true\"\n      (focusout)=\"rcpState = false\"\n    />\n    <mat-hint *ngIf=\"rcpState\" align=\"end\"\n      >{{ receiverContactPerson.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverContactPerson').invalid &&\n        form.get('receiverContactPerson').touched &&\n        !rcpState\n      \"\n      >max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>telefon</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"receiverContactPhone\"\n      #receiverContactPhone\n      maxlength=\"20\"\n      (keyup)=\"\n        receiverContactPhone.value = trimDoubleSpaceAndNotNumber(\n          receiverContactPhone.value\n        )\n      \"\n      (focus)=\"rcphState = true\"\n      (focusout)=\"rcphState = false\"\n    />\n    <mat-hint *ngIf=\"rcphState\" align=\"end\"\n      >{{ receiverContactPhone.value?.length || 0 }}/20 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverContactPhone').invalid &&\n        form.get('receiverContactPhone').touched &&\n        !rcphState\n      \"\n      >max. 20 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>email</mat-label>\n    <input\n      matInput\n      type=\"email\"\n      formControlName=\"receiverContactEmail\"\n      #receiverContactEmail\n      maxlength=\"60\"\n      (focus)=\"rceState = true\"\n      (focusout)=\"rceState = false\"\n    />\n    <mat-hint *ngIf=\"rceState\" align=\"end\"\n      >{{ receiverContactEmail.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverContactEmail').invalid &&\n        form.get('receiverContactEmail').touched &&\n        !rceState\n      \"\n      >format: email, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">paczka:</h3>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>rodzaj</mat-label>\n    <mat-select\n      formControlName=\"type\"\n      #type\n      (focus)=\"tState = true\"\n      (focusout)=\"tState = false\"\n    >\n      <mat-option value=\"PACKAGE\">paczka</mat-option>\n      <mat-option value=\"PALLETTE\">paleta</mat-option>\n      <mat-option value=\"ENVELOPE\">koperta</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"form.get('type').invalid && form.get('type').touched && !tState\"\n      >pole wymaga wyboru</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>waga</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"weight\"\n      #weight\n      (keyup)=\"weight.value = trimComma(weight.value)\"\n      (focus)=\"weState = true\"\n      (focusout)=\"weState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"weState || form.get('weight').value != null\" matSuffix\n      >kg</span\n    >\n    <mat-hint *ngIf=\"weState\" align=\"end\">max 31kg</mat-hint>\n    <mat-error *ngIf=\"form.get('weight').invalid && form.get('weight').touched\"\n      >max. 31kg</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>długość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"width\"\n      #width\n      (keyup)=\"width.value = trimComma(width.value)\"\n      (focus)=\"wiState = true\"\n      (focusout)=\"wiState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"wiState || form.get('width').value != null\" matSuffix>cm</span>\n    <mat-hint *ngIf=\"wiState\" align=\"end\">max {{ wMax }}cm</mat-hint>\n    <mat-error *ngIf=\"form.get('width').invalid && form.get('width').touched\"\n      >max. {{ wMax }}cm</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>szerokość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"length\"\n      #length\n      (keyup)=\"length.value = trimComma(length.value)\"\n      (focus)=\"lState = true\"\n      (focusout)=\"lState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"lState || form.get('length').value != null\" matSuffix>cm</span>\n    <mat-hint *ngIf=\"lState\" align=\"end\">max {{ lMax }}cm</mat-hint>\n    <mat-error *ngIf=\"form.get('length').invalid && form.get('length').touched\"\n      >max. {{ lMax }}cm</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>wysokość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"height\"\n      #height\n      (keyup)=\"height.value = trimComma(height.value)\"\n      (focus)=\"hState = true\"\n      (focusout)=\"hState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"hState || form.get('height').value != null\" matSuffix>cm</span>\n    <mat-hint *ngIf=\"hState\" align=\"end\">max {{ hMax }}cm</mat-hint>\n    <mat-error *ngIf=\"form.get('height').invalid && form.get('height').touched\"\n      >max. {{ hMax }}cm</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>liczba</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"quantity\"\n      #quantity\n      (keyup)=\"quantity.value = trimComma(quantity.value)\"\n      (focus)=\"qState = true\"\n      (focusout)=\"qState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"qState || form.get('quantity').value != null\" matSuffix\n      >szt.</span\n    >\n    <mat-hint *ngIf=\"qState\" align=\"end\">min 1 szt.</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('quantity').invalid && form.get('quantity').touched && !qState\n      \"\n      >min. 1</mat-error\n    >\n    <mat-checkbox formControlName=\"nonStandard\" labelPosition=\"before\"\n      >nonStandard</mat-checkbox\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>zawartość</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"content\"\n      #content\n      maxlength=\"30\"\n      (keyup)=\"content.value = trimDoubleSpace(content.value)\"\n      (focus)=\"cnState = true\"\n      (focusout)=\"cnState = false\"\n    />\n    <mat-hint *ngIf=\"cnState\" align=\"end\"\n      >{{ content.value?.length || 0 }}/30 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('content').invalid && form.get('content').touched && !cnState\n      \"\n      >max. 30 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>uwagi</mat-label>\n    <textarea\n      matInput\n      type=\"text\"\n      formControlName=\"comment\"\n      #comment\n      maxlength=\"100\"\n      (keyup)=\"content.value = trimDoubleSpace(content.value)\"\n      (focus)=\"cmState = true\"\n      (focusout)=\"cmState = false\"\n    >\n    </textarea>\n    <mat-hint *ngIf=\"cmState\" align=\"end\"\n      >{{ comment.value?.length || 0 }}/100 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('comment').invalid && form.get('comment').touched && !cmState\n      \"\n      >max. 100 znaków</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">usługi dodatkowe:</h3>\n  <mat-checkbox formControlName=\"CoD\" labelPosition=\"before\">\n    za pobraniem\n  </mat-checkbox>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kwota</mat-label>\n    <!-- format lokalny w Polsce odcina części dziesiętne przecinkiem a nie kropką, a tysiące - spacją -->\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"CoDValue\"\n      #CoDValue\n      (focus)=\"cvState = true\"\n      (focusout)=\"cvState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"cvState || form.get('CoDValue').value != null\" matSuffix\n      >zł</span\n    >\n    <mat-hint *ngIf=\"cvState\" align=\"end\">max 11000.00zł</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('CoDValue').invalid && form.get('CoDValue').touched && !cvState\n      \"\n      >format 123.45zł</mat-error\n    >\n  </mat-form-field>\n  <mat-checkbox formControlName=\"insurance\" labelPosition=\"before\">\n    ubezpieczenie przesyłki\n  </mat-checkbox>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>wartość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"insuranceValue\"\n      #insuranceValue\n      (focus)=\"ivState = true\"\n      (focusout)=\"ivState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"ivState || form.get('insuranceValue').value != null\" matSuffix\n      >zł</span\n    >\n    <mat-hint *ngIf=\"ivState\" align=\"end\">format: 1234.56zł</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('insuranceValue').invalid &&\n        form.get('insuranceValue').touched &&\n        !ivState\n      \"\n      >format: 123.45zł, nie mniej niż pobranie</mat-error\n    >\n  </mat-form-field>\n\n  <div>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\"\n      [disabled]=\"!form.valid\"\n    >\n      utwórz przesyłkę\n    </button>\n    <!-- nałożyć style żeby wyświetlać chips'a obok guzików -->\n    <mat-chip-list>\n      <mat-chip *ngIf=\"size\" color=\"primary\" selected>\n        {{ size }} paczka DHL\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n  <div>\n    <button mat-raised-button color=\"accent\" disabled>\n      zamów kuriera\n    </button>\n  </div>\n</form>\n","import {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Directive({\n  selector: '[cdkDetailRow]',\n})\nexport class CdkDetailRowDirective {\n  private row: any;\n  private tRef: TemplateRef<any>;\n  private opened: boolean;\n\n  @HostBinding('class.expanded')\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input()\n  set cdkDetailRow(value: any) {\n    if (value !== this.row) {\n      this.row = value;\n    }\n  }\n\n  @Input('cdkDetailRowTpl')\n  set template(value: TemplateRef<any>) {\n    if (value !== this.tRef) {\n      this.tRef = value;\n    }\n  }\n\n  constructor(public vcRef: ViewContainerRef) {}\n\n  @HostListener('click')\n  onClick(): void {\n    this.toggle();\n  }\n\n  toggle(): void {\n    if (this.opened) {\n      this.vcRef.clear();\n    } else {\n      this.render();\n    }\n    this.opened = this.vcRef.length > 0;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.tRef && this.row) {\n      this.vcRef.createEmbeddedView(this.tRef, { $implicit: this.row });\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  MatPaginator,\n  MatTableDataSource,\n  MatSort,\n  Sort,\n} from '@angular/material';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { ConsignmentsService } from '../consignments.service';\nimport { Consignment } from '../model/consignment.model';\nimport { environment } from '../../../environments/environment';\n\nconst SERVER_URL = environment.serverUrl;\n\n@Component({\n  selector: 'app-consignment-list',\n  templateUrl: './consignment-list.component.html',\n  styleUrls: ['./consignment-list.component.css'],\n})\nexport class ConsignmentListComponent implements OnInit, OnDestroy {\n  private authStatusSub: Subscription;\n  isAuthenticated = false;\n  isLoading: boolean;\n  pageEvent;\n  displayedColumns: string[] = [\n    'select',\n    'consignmentId',\n    'login',\n    'shipperName',\n    'receiverName',\n    'status',\n    'shipmentDateTime',\n    'action',\n  ];\n  detailColumns = this.displayedColumns.length - 1;\n  consignments;\n  dataSource: any;\n  selection = new SelectionModel<Consignment>(true, []);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    public consignmentsService: ConsignmentsService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.isAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.isAuthenticated = isAuthenticated;\n      });\n    this.listConsignments();\n  }\n\n  listConsignments() {\n    this.consignmentsService.listConsignments().then(response => {\n      this.isLoading = false;\n      this.consignments = response.consignments;\n      this.dataSource = new MatTableDataSource<any>(this.consignments);\n      this.dataSource.paginator = this.paginator;\n      const sortState: Sort = {\n        active: 'shipmentDateTime',\n        direction: 'desc',\n      };\n      this.sort.active = sortState.active;\n      this.sort.direction = sortState.direction;\n      this.sort.sortChange.emit(sortState);\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  isExpansionDetailRow = row => row.hasOwnProperty('detailRow');\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n\n  showDetails(shipmentId: string) {\n    this.router.navigate(['./consignments/' + shipmentId]);\n  }\n\n  deleteSelected() {\n    let selectedConsignments = [];\n    this.selection.selected.forEach(el => {\n      selectedConsignments.push(el.consignmentId);\n    });\n    this.consignmentsService.deleteConsignments(selectedConsignments).then(\n      () => {\n        this.listConsignments();\n      },\n      error => {}\n    );\n  }\n\n  handlePage(event: any) {\n    if (this.selection.selected.length > event.pageSize) {\n      this.selection.clear();\n      this.selectRows();\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.paginator.length;\n    const pageSize = this.dataSource.paginator.pageSize;\n\n    return numSelected === numRows || numSelected === pageSize ? true : false;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ? this.selection.clear() : this.selectRows();\n  }\n\n  selectRows() {\n    this.dataSource\n      ._pageData(this.dataSource._orderData(this.dataSource.filteredData))\n      .forEach(row => this.selection.select(row));\n  }\n\n  onLabelPrint(consignmentId) {\n    this.isLoading = true;\n    // teraz, aby pobrać etykietę, backend pobiera z dhl całą przesyłkę i generuje pdfa (za każdym razem!)\n    // a mógłby sprawdzić, czy plik jest już w /files i stamtąd pobrać\n    // a w sumie etykieta pobierana będzie dla każdej utworzonej przesyłki więc może generować ją przy tworzeniu przesyłki i adres do etykiety zapisywać w db?\n    // a może pdf'a zapisywać w db?\n    this.consignmentsService.getConsignment(consignmentId).then(\n      data => {\n        let labelPath = SERVER_URL + data.labelPath;\n        this.isLoading = false;\n        window.open(labelPath, '_blank');\n      },\n      error => {}\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<div *ngIf=\"isAuthenticated\">\n  <h1 class=\"mat-title\">lista przesyłek</h1>\n  <mat-form-field class=\"filter\">\n    <input\n      matInput\n      (keyup)=\"applyFilter($event.target.value)\"\n      placeholder=\"wyszukaj przesyłkę\"\n    />\n  </mat-form-field>\n  <div class=\"list-container\">\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"select\" class=\"mat-col-checkbox\">\n        <mat-header-cell *matHeaderCellDef>\n          <mat-checkbox\n            (change)=\"$event ? masterToggle() : null\"\n            [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n          ></mat-checkbox>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation()\">\n          <mat-checkbox\n            (change)=\"$event ? selection.toggle(element) : null\"\n            [checked]=\"selection.isSelected(element)\"\n          ></mat-checkbox>\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"consignmentId\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          id przesyłki\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{\n          element.consignmentId\n        }}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"login\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          użytkownik\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{ element.login }}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"shipperName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          nadawca\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{ element.shipperName }}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"receiverName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          odbiorca\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          {{ element.receiverName }}\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          status\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          {{ element.trackAndTraceInfo[0].status }}\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"shipmentDateTime\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          data nadania\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          {{ element.shipmentDateTime }}\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button\n            class=\"edit-button\"\n            mat-raised-button\n            color=\"primary\"\n            matTooltip=\"utwórz podobną\"\n            matTooltipPosition=\"above\"\n            (click)=\"$event.stopPropagation()\"\n          >\n            <mat-icon>create</mat-icon>\n          </button>\n          <button\n            class=\"edit-button\"\n            mat-raised-button\n            color=\"primary\"\n            matTooltip=\"wydrukuj etykietę\"\n            matTooltipPosition=\"above\"\n            (click)=\"\n              onLabelPrint(element.consignmentId); $event.stopPropagation()\n            \"\n          >\n            <mat-icon>print</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row\n        *matRowDef=\"let row; columns: displayedColumns\"\n        matRipple\n        class=\"element-row\"\n        [cdkDetailRow]=\"row\"\n        [cdkDetailRowTpl]=\"tpl\"\n      >\n      </mat-row>\n    </mat-table>\n\n    <mat-progress-spinner\n      color=\"primary\"\n      mode=\"indeterminate\"\n      *ngIf=\"isLoading\"\n    >\n    </mat-progress-spinner>\n\n    <mat-toolbar class=\"toolbar\">\n      <mat-toolbar-row>\n        <button\n          *ngIf=\"selection.hasValue()\"\n          mat-button\n          class=\"delete-button\"\n          (click)=\"deleteSelected()\"\n          matTooltip=\"usuń wybrane\"\n          matTooltipPosition=\"above\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <mat-paginator\n          pageSize=\"10\"\n          [pageSizeOptions]=\"[5, 10, 100]\"\n          (page)=\"pageEvent = handlePage($event)\"\n        ></mat-paginator>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  </div>\n\n  <button mat-raised-button color=\"accent\" routerLink=\"create\">\n    <i class=\"material-icons\">\n      add_circle\n    </i>\n    utwórz nową przesyłkę\n  </button>\n\n  <ng-template #tpl let-element>\n    <div class=\"mat-row detail-row\">\n      <mat-grid-list cols=\"{{ detailColumns }}\">\n        <mat-grid-tile>\n          <p>id {{ element.consignmentId }}</p>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <p>nadawca {{ element.shipperName }}</p>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <p>odbiorca {{ element.receiverName }}</p>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <ng-container *ngFor=\"let status of element.trackAndTraceInfo\">\n            <div>\n              <p>{{ status.description }}</p>\n              <p>{{ status.timestamp }}</p>\n            </div>\n          </ng-container>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <button\n        mat-button\n        matTooltip=\"szczegóły przesyłki\"\n        (click)=\"showDetails(element.consignmentId)\"\n      >\n        szczegóły\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { MatPaginatorIntl } from '@angular/material/paginator';\n\nconst polishRangeLabel = (page: number, pageSize: number, length: number) => {\n  if (length == 0 || pageSize == 0) {\n    return `0 z ${length}`;\n  }\n\n  length = Math.max(length, 0);\n\n  const startIndex = page * pageSize;\n\n  const endIndex =\n    startIndex < length\n      ? Math.min(startIndex + pageSize, length)\n      : startIndex + pageSize;\n\n  return `${startIndex + 1} - ${endIndex} z ${length}`;\n};\n\nexport function getPolishPaginatorIntl() {\n  const paginatorIntl = new MatPaginatorIntl();\n\n  paginatorIntl.itemsPerPageLabel = 'liczba przesyłek na stronie:';\n  paginatorIntl.nextPageLabel = 'poprzednia strona';\n  paginatorIntl.previousPageLabel = 'następna strona';\n  paginatorIntl.getRangeLabel = polishRangeLabel;\n\n  return paginatorIntl;\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { ConsignmentsService } from '../consignments.service';\nimport { Consignment } from '../model/consignment.model';\nimport { environment } from '../../../environments/environment';\n\nconst SERVER_URL = environment.serverUrl;\n\n@Component({\n  templateUrl: './consignment-show.component.html',\n  styleUrls: ['./consignment-show.component.css'],\n})\nexport class ConsignmentShowComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  consignment: Consignment;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public consignmentsService: ConsignmentsService,\n    public route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(() => {\n        this.isLoading = false;\n      });\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('consignmentId')) {\n        const consignmentId = paramMap.get('consignmentId');\n        this.isLoading = true;\n        this.getConsignment(consignmentId);\n      } else {\n        this.router.navigate(['/consignments']);\n      }\n    });\n  }\n\n  getConsignment(consignmentId: string) {\n    this.consignmentsService.getConsignment(consignmentId).then(\n      data => {\n        this.isLoading = false;\n        this.consignment = {\n          login: data.login,\n          consignmentId: data.consignmentId,\n          creationDate: data.creationDate,\n          status: data.status,\n          shipper: data.shipper,\n          receiver: data.receiver,\n          piece: data.piece,\n          payerType: data.payerType,\n          service: data.service,\n          shipmentDate: data.shipmentDate,\n          comment: data.comment,\n          content: data.content,\n          labelPath: SERVER_URL + data.labelPath,\n          letterPath: SERVER_URL + data.letterPath,\n          trackAndTraceInfo: data.trackAndTraceInfo,\n        };\n      },\n      error => {}\n    );\n  }\n\n  formatDate(date: Date): string {\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    return day + '-' + month + '-' + year;\n  }\n\n  open(filePath) {\n    window.open(filePath, '_blank');\n  }\n\n  onDelete() {\n    const consignmentId = [this.consignment.consignmentId];\n    this.consignmentsService.deleteConsignments(consignmentId).then(\n      () => {\n        this.router.navigate(['/consignments']);\n      },\n      error => {}\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<h1 class=\"mat-title\">\n  szczegóły przesyłki\n  <span *ngIf=\"!isLoading\">nr {{ consignment?.consignmentId }}</span>\n</h1>\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<div *ngIf=\"!isLoading\">\n  <div class=\"details-container\">\n    <p>\n      <mat-label>właściciel: {{ consignment?.login }}</mat-label>\n      <br />\n      <mat-label>data: {{ consignment?.shipmentDate }}</mat-label>\n    </p>\n    <br />\n    <h3 class=\"mat-h3\">nadawca:</h3>\n    <p>\n      <mat-label>{{ consignment?.shipper.name }}</mat-label\n      ><br />\n      <mat-label>{{ consignment?.shipper.postalCode }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.city }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.street }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.houseNumber }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.apartmentNumber }}</mat-label>\n      <ng-container\n        *ngIf=\"\n          consignment?.shipper.contactPerson &&\n          consignment?.shipper.name.toLowerCase() !==\n            consignment?.shipper.contactPerson.toLowerCase()\n        \"\n      >\n        <br />\n        <mat-label>{{ consignment?.shipper.contactPerson }}</mat-label>\n      </ng-container>\n      <ng-container *ngIf=\"consignment?.shipper.contactPhone\">\n        <br /><mat-label>\n          tel.: {{ consignment.shipper.contactPhone }}</mat-label\n        > </ng-container\n      ><br />\n      <mat-label *ngIf=\"consignment?.shipper.contactEmail\"\n        >email: {{ consignment.shipper.contactEmail }}</mat-label\n      >\n    </p>\n    <br />\n    <h3 class=\"mat-h3\">odbiorca:</h3>\n    <p>\n      <mat-label>{{ consignment?.receiver.name }}</mat-label\n      ><br />\n      <mat-label>{{ consignment?.receiver.postalCode }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.city }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.street }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.houseNumber }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.apartmentNumber }}</mat-label>\n      <ng-container\n        *ngIf=\"\n          consignment?.receiver.contactPerson &&\n          consignment?.receiver.name.toLowerCase() !==\n            consignment?.receiver.contactPerson.toLowerCase()\n        \"\n      >\n        <br />\n        <mat-label>{{ consignment?.receiver.contactPerson }}</mat-label>\n      </ng-container>\n      <ng-container *ngIf=\"consignment?.receiver.contactPhone\">\n        <br />\n        <mat-label>tel.: {{ consignment?.receiver.contactPhone }}</mat-label>\n      </ng-container>\n      <br />\n      <mat-label *ngIf=\"consignment?.receiver.contactEmail\"\n        >email: {{ consignment?.receiver.contactEmail }}</mat-label\n      >\n    </p>\n    <br />\n    <h3 class=\"mat-h3\">przesyłka:</h3>\n    <p>\n      <mat-label>{{ consignment?.piece.type }}</mat-label\n      ><br />\n      <ng-container *ngIf=\"consignment?.piece.type !== 'ENVELOPE'\">\n        <mat-label>masa: {{ consignment?.piece.weight }}kg</mat-label><br />\n        <mat-label\n          >wymiary: {{ consignment?.piece.width }} x\n          {{ consignment?.piece.length }} x\n          {{ consignment?.piece.height }} [cm]</mat-label\n        ><br />\n        <ng-container *ngIf=\"consignment?.piece.nonStandard\">\n          <mat-label>* paczka niestandardowa</mat-label><br />\n        </ng-container>\n      </ng-container>\n      <mat-label>zawartość: {{ consignment?.content }}</mat-label>\n      <ng-container *ngIf=\"consignment?.comment\">\n        <br />\n        <mat-label>uwagi: {{ consignment.comment }}</mat-label>\n      </ng-container>\n    </p>\n    <ng-container\n      *ngIf=\"consignment?.service.CoD || consignment?.service.insurance\"\n    >\n      <br />\n      <h3 class=\"mat-h3\">opcje:</h3>\n      <p>\n        <ng-container *ngIf=\"consignment.service.CoD\">\n          <mat-label\n            >kwota pobrania: {{ consignment.service.CoDValue }}zł</mat-label\n          ><br />\n        </ng-container>\n        <mat-label *ngIf=\"consignment.service.insurance\"\n          >kwota ubezpieczenia:\n          {{ consignment.service.insuranceValue }}zł</mat-label\n        >\n      </p>\n    </ng-container>\n  </div>\n  <div class=\"stepper-container\">\n    <h3 class=\"mat-h3\">status:</h3>\n    <mat-vertical-stepper #stepper linear>\n      <ng-template matStepperIcon=\"edit\">\n        <mat-icon>done</mat-icon>\n      </ng-template>\n      <ng-container\n        *ngFor=\"\n          let trackAndTraceInfo of consignment?.trackAndTraceInfo\n            .slice()\n            .reverse()\n        \"\n      >\n        <mat-step>\n          <ng-template matStepperIcon=\"number\" matStepLabel\n            >{{ trackAndTraceInfo.status }}\n          </ng-template>\n          <p>{{ trackAndTraceInfo.description }}</p>\n          <p>{{ trackAndTraceInfo.timestamp }}</p>\n        </mat-step>\n      </ng-container>\n    </mat-vertical-stepper>\n  </div>\n  <div class=\"action-container\">\n    <button\n      mat-raised-button\n      [disabled]=\"!consignment.labelPath\"\n      color=\"accent\"\n      (click)=\"open(consignment.labelPath)\"\n    >\n      pokaż etykietę\n    </button>\n    <button\n      mat-raised-button\n      [disabled]=\"!consignment.letterPath\"\n      color=\"accent\"\n      (click)=\"open(consignment.letterPath)\"\n    >\n      pokaż list przewozowy\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">\n      - usuń przesyłkę\n    </button>\n\n    <div>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        routerLink=\"/consignments/create\"\n      >\n        + utwórz nową\n      </button>\n      <button mat-raised-button color=\"accent\">\n        + utwórz podobną\n      </button>\n    </div>\n    <div>\n      <button mat-raised-button color=\"accent\" disabled>\n        zamów kuriera\n      </button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConsignmentListComponent } from './consignment-list/consignment-list.component';\nimport { ConsignmentCreateComponent } from './consignment-create/consignment-create.component';\nimport { ConsignmentShowComponent } from './consignment-show/consignment-show.component';\n\nconst routes: Routes = [\n  { path: '', component: ConsignmentListComponent },\n  { path: 'create', component: ConsignmentCreateComponent },\n  { path: ':consignmentId', component: ConsignmentShowComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConsignmentsRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './consignments.component.html',\n})\nexport class ConsignmentsComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConsignmentsComponent } from './consignments.component';\nimport { ConsignmentsRoutingModule } from './consignments-routing.module';\nimport { AngularMaterialModule } from '../material.module';\nimport { ConsignmentCreateComponent } from './consignment-create/consignment-create.component';\nimport { ConsignmentListComponent } from './consignment-list/consignment-list.component';\nimport { CdkDetailRowDirective } from './consignment-list/cdk-detail-row.directive';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { getPolishPaginatorIntl } from './consignment-list/polish-paginator-intl';\nimport { ConsignmentShowComponent } from './consignment-show/consignment-show.component';\n\n@NgModule({\n  declarations: [\n    ConsignmentsComponent,\n    ConsignmentCreateComponent,\n    ConsignmentListComponent,\n    CdkDetailRowDirective,\n    ConsignmentShowComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    ConsignmentsRoutingModule,\n  ],\n  providers: [\n    { provide: MatPaginatorIntl, useValue: getPolishPaginatorIntl() },\n  ],\n})\nexport class ConsignmentsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth/auth.service';\nimport { ToastService } from '../shared/toast.service';\nimport { Consignment } from './model/consignment.model';\nimport { environment } from '../../environments/environment';\n\nconst BACKEND_URL = environment.apiURL + 'consignments/';\n\n@Injectable({ providedIn: 'root' })\nexport class ConsignmentsService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private toastService: ToastService,\n    private router: Router\n  ) {}\n\n  createConsignment(consignment: Consignment): Promise<any> {\n    return this.http\n      .post<{ message: string; consignmentId: number }>(\n        BACKEND_URL + 'create',\n        consignment\n      )\n      .toPromise()\n      .then(response => {\n        return response;\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  listConsignments(): Promise<any> {\n    const userId = this.authService.getUserId();\n\n    return this.http\n      .post<{ message: string; consignments: [] }>(BACKEND_URL, {\n        userId: userId,\n      })\n      .toPromise()\n      .then(\n        response => {\n          if (!response.consignments) {\n            this.toastService.showToast(response.message);\n          }\n\n          return response;\n        },\n        error => {\n          return error;\n        }\n      );\n  }\n\n  getConsignment(consignmentId) {\n    return this.http\n      .get<{\n        message: string;\n        login: string;\n        consignmentId: number;\n        creationDate: string;\n        status: string;\n        trackAndTraceInfo: [\n          {\n            status: string;\n            description: string;\n            timestamp: string;\n          }\n        ];\n        shipper: {\n          name: string;\n          postalCode: string;\n          city: string;\n          street: string;\n          houseNumber: string;\n          apartmentNumber: string;\n          contactPerson: string;\n          contactPhone: string;\n          contactEmail: string;\n        };\n        receiver: {\n          country: string;\n          name: string;\n          postalCode: string;\n          city: string;\n          street: string;\n          houseNumber: string;\n          apartmentNumber: string;\n          contactPerson: string;\n          contactPhone: string;\n          contactEmail: string;\n        };\n        piece: {\n          type: string;\n          weight: number;\n          width: number;\n          length: number;\n          height: number;\n          quantity: number;\n          nonStandard: boolean;\n        };\n        payerType: string;\n        service: {\n          CoD: boolean;\n          CoDValue: number;\n          insurance: boolean;\n          insuranceValue: number;\n        };\n        shipmentDate: string;\n        comment: string;\n        content: string;\n        labelPath: string;\n        letterPath: string;\n      }>(BACKEND_URL + consignmentId)\n      .toPromise()\n      .then(\n        response => {\n          return response;\n        },\n        error => {\n          this.router.navigate(['/consignments']);\n\n          return error;\n        }\n      );\n  }\n\n  deleteConsignments(selectedConsignments: number[]): Promise<any> {\n    const userId = this.authService.getUserId();\n\n    return this.http\n      .patch<{ message: string; consignmentList: number[] }>(BACKEND_URL, {\n        selectedConsignments,\n        userId,\n      })\n      .toPromise()\n      .then(\n        response => {\n          this.toastService.showToast(response.message);\n\n          return response;\n        },\n        error => {\n          return error;\n        }\n      );\n  }\n}\n"],"sourceRoot":"webpack:///"}