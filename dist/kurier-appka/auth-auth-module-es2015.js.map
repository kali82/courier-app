{"version":3,"sources":["./src/app/auth/admin.guard.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/create/create.component.ts","./src/app/auth/create/create.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    const isAdmin = this.authService.getIsAdmin();\n    if (!isAdmin) {\n      this.router.navigate(['/dashboard']);\n    }\n    return isAdmin;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { CreateComponent } from './create/create.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login' },\n  { path: 'login', component: LoginComponent },\n  { path: 'create', component: CreateComponent, canActivate: [AdminGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { CreateComponent } from './create/create.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AngularMaterialModule } from '../material.module';\n\n@NgModule({\n  declarations: [LoginComponent, CreateComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AuthRoutingModule,\n    AngularMaterialModule,\n  ],\n})\nexport class AuthModule {}\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css'],\n})\nexport class CreateComponent {\n  isLoading = false;\n\n  constructor(public authService: AuthService) {}\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.login, form.value.password);\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n  <mat-form-field>\n    <input\n      matInput\n      name=\"login\"\n      ngModel\n      type=\"login\"\n      placeholder=\"login\"\n      #loginInput=\"ngModel\"\n      required\n    />\n    <mat-error *ngIf=\"loginInput.invalid\">Podaj poprawny login.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      type=\"password\"\n      name=\"password\"\n      ngModel\n      matInput\n      placeholder=\"hasło\"\n      #passwordInput=\"ngModel\"\n      required\n    />\n    <mat-error *ngIf=\"passwordInput.invalid\">Podaj prawidłowe hasło.</mat-error>\n  </mat-form-field>\n  <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">\n    rejestruj\n  </button>\n</form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  isUnauthorized = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n        if (!authStatus) {\n          this.isUnauthorized = true;\n        }\n      });\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.login, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\n  <mat-form-field>\n    <input\n      matInput\n      name=\"login\"\n      type=\"login\"\n      ngModel\n      placeholder=\"login\"\n      #loginInput=\"ngModel\"\n      required\n    />\n    <mat-error *ngIf=\"loginInput.invalid\">Treść walidacji</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      name=\"password\"\n      type=\"password\"\n      ngModel\n      placeholder=\"hasło\"\n      #passwordInput=\"ngModel\"\n      required\n    />\n    <mat-error *ngIf=\"passwordInput.invalid\">Podaj prawidłowe hasło.</mat-error>\n  </mat-form-field>\n  <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">\n    zaloguj\n  </button>\n</form>\n<p *ngIf=\"isUnauthorized\">Podano niewłaściwy login lub hasło.</p>\n"],"sourceRoot":"webpack:///"}