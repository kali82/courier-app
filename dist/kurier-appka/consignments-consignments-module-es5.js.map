{"version":3,"sources":["webpack:///src/app/consignments/consignment-create/consignment-create.component.ts","webpack:///src/app/consignments/consignment-create/consignment-create.component.html","webpack:///src/app/consignments/consignment-list/cdk-detail-row.directive.ts","webpack:///src/app/consignments/consignment-list/consignment-list.component.ts","webpack:///src/app/consignments/consignment-list/consignment-list.component.html","webpack:///src/app/consignments/consignment-list/polish-paginator-intl.ts","webpack:///src/app/consignments/consignment-show/consignment-show.component.ts","webpack:///src/app/consignments/consignment-show/consignment-show.component.html","webpack:///src/app/consignments/consignments-routing.module.ts","webpack:///src/app/consignments/consignments.component.ts","webpack:///src/app/consignments/consignments.module.ts","webpack:///src/app/consignments/consignments.service.ts"],"names":["ConsignmentCreateComponent","consignmentsService","authService","router","toastService","ivState","cvState","cmState","cnState","qState","hState","lState","wiState","weState","tState","rceState","rcState","rcpState","rcphState","rpchState","rpcState","raState","rhState","rsState","rnState","cState","sceState","scphState","scpState","scState","spcState","saState","ssState","shState","snState","sdState","isLoading","today","Date","tomorrow","setDate","getDate","in3days","minDate","getFullYear","getMonth","maxDate","MAX_WEIGHT","LONG","SHORT","LARGE","SMALL","HEAVY","LIGHT","weekendFilter","date","day","getDay","saturday","sunday","createForm","setPieceValidators","setServiceValidators","authStatusSub","getAuthStatusListener","subscribe","authStatus","string","replace","trimDoubleSpace","number","postalCode","length","concat","substring","apartment","form","payerType","validators","required","shipmentDate","shipperName","minLength","maxLength","shipperPostalCode","pattern","shipperCity","shipperStreet","shipperHouseNumber","shipperApartmentNumber","shipperContactPerson","shipperContactPhone","shipperContactEmail","email","country","receiverName","receiverPostalCode","receiverCity","receiverStreet","receiverHouseNumber","receiverApartmentNumber","receiverContactPerson","receiverContactPhone","receiverContactEmail","type","weight","value","disabled","width","height","quantity","min","nonStandard","content","comment","CoD","CoDValue","insurance","insuranceValue","toString","padStart","month","year","typeControl","get","weightControl","widthControl","lengthControl","heightControl","valueChanges","setValue","disable","wMax","lMax","hMax","enable","setValidators","max","setWeightListener","setDimensionsValidators","updateDimensionsValidators","updateDimensionValidators","determineSize","dimensionControl","maxValue","updateValueAndValidity","emitEvent","size","selected","clearValidators","invalid","userId","getUserId","login","getLogin","pickedDate","shipmentDateTime","getHours","getMinutes","getSeconds","toLocaleString","formatDateForDhlApi","service","shipper","name","city","street","houseNumber","apartmentNumber","contactPerson","contactPhone","contactEmail","receiver","piece","consignment","createConsignment","then","response","status","showToast","reset","consignmentId","message","navigate","unsubscribe","templateUrl","styleUrls","CdkDetailRowDirective","vcRef","opened","row","tRef","toggle","clear","render","createEmbeddedView","$implicit","selector","expended","cdkDetailRow","template","onClick","$event","stopPropagation","selection","SERVER_URL","serverUrl","ConsignmentListComponent","isAuthenticated","displayedColumns","detailColumns","isExpansionDetailRow","hasOwnProperty","getIsAuth","listConsignments","consignments","dataSource","paginator","sortState","active","direction","sort","sortChange","emit","filterValue","trim","toLowerCase","filter","shipmentId","selectedConsignments","forEach","el","push","deleteConsignments","error","event","pageSize","selectRows","numSelected","numRows","isAllSelected","_pageData","_orderData","filteredData","select","getConsignment","data","labelPath","window","open","polishRangeLabel","page","Math","startIndex","endIndex","getPolishPaginatorIntl","paginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","getRangeLabel","ConsignmentShowComponent","route","paramMap","has","creationDate","letterPath","trackAndTraceInfo","filePath","routes","path","component","ConsignmentsRoutingModule","forChild","imports","exports","ConsignmentsComponent","ConsignmentsModule","provide","useValue","declarations","providers","BACKEND_URL","apiURL","ConsignmentsService","http","post","toPromise","patch","providedIn"],"mappings":"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","file":"consignments-consignments-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { ToastService } from '../../shared/toast.service';\nimport { ConsignmentsService } from '../consignments.service';\nimport { Consignment } from '../model/consignment.model';\nimport { Service } from '../model/service.model';\nimport { ShipperAddress } from '../model/shipper-address.model';\nimport { ReceiverAddress } from '../model/receiver-address.model';\nimport { Piece } from '../model/piece.model';\n\n@Component({\n  templateUrl: './consignment-create.component.html',\n  styleUrls: ['./consignment-create.component.css'],\n})\nexport class ConsignmentCreateComponent implements OnInit, OnDestroy {\n  ivState = false;\n  cvState = false;\n  cmState = false;\n  cnState = false;\n  qState = false;\n  hState = false;\n  lState = false;\n  wiState = false;\n  weState = false;\n  tState = false;\n  rceState = false;\n  rcState = false;\n  rcpState = false;\n  rcphState = false;\n  rpchState = false;\n  rpcState = false;\n  raState = false;\n  rhState = false;\n  rsState = false;\n  rnState = false;\n  cState = false;\n  sceState = false;\n  scphState = false;\n  scpState = false;\n  scState = false;\n  spcState = false;\n  saState = false;\n  ssState = false;\n  shState = false;\n  snState = false;\n  sdState = false;\n\n  isLoading = false;\n  form: FormGroup;\n  today = new Date();\n  tomorrow = new Date(this.today.setDate(this.today.getDate() + 1));\n  in3days = new Date(this.today.setDate(this.today.getDate() + 2));\n  minDate = new Date(\n    this.tomorrow.getFullYear(),\n    this.tomorrow.getMonth(),\n    this.tomorrow.getDate()\n  );\n  maxDate = new Date(\n    this.in3days.getFullYear(),\n    this.in3days.getMonth(),\n    this.in3days.getDate()\n  );\n  private authStatusSub: Subscription;\n  weightControl;\n  widthControl;\n  lengthControl;\n  heightControl;\n  weight;\n  width;\n  length;\n  height;\n  wMax: number;\n  lMax: number;\n  hMax: number;\n  size;\n  MAX_WEIGHT = 31;\n  LONG = 120;\n  SHORT = 60;\n  LARGE = 76;\n  SMALL = 36;\n  HEAVY = 10.1;\n  LIGHT = 1.1;\n\n  constructor(\n    public consignmentsService: ConsignmentsService,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n    this.setPieceValidators();\n    this.setServiceValidators();\n\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n  }\n\n  trimDoubleSpace(string) {\n    return string.replace(/\\s\\s+/g, ' ');\n  }\n\n  trimDoubleSpaceAndNumber(string) {\n    return this.trimDoubleSpace(string.replace(/\\d+/g, ''));\n  }\n\n  trimDoubleSpaceAndNotNumber(number) {\n    return this.trimDoubleSpace(number.replace(/\\D+/g, ''));\n  }\n\n  trimComma(number) {\n    return number.replace(/\\D+/g, '');\n  }\n\n  formatPostalCode(postalCode) {\n    if (postalCode.length < 4) postalCode = postalCode.replace(/\\D+/g, '');\n    if (postalCode.length == 2) postalCode = postalCode.concat('-');\n    if (postalCode.length > 2) {\n      postalCode = postalCode.replace(\n        /\\d\\d-\\d?\\d?\\D/g,\n        postalCode.substring(0, postalCode.length - 1)\n      );\n    }\n\n    return postalCode;\n  }\n\n  maxTenDigit(apartment) {\n    if (apartment.length > 10) apartment = apartment.substring(0, 10);\n\n    return apartment;\n  }\n\n  createForm() {\n    this.form = new FormGroup({\n      payerType: new FormControl('SHIPPER', {\n        validators: [Validators.required],\n      }),\n      shipmentDate: new FormControl(null, {\n        validators: [Validators.required],\n      }),\n      shipperName: new FormControl('aaaaa', {\n        validators: [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(60),\n        ],\n      }),\n      shipperPostalCode: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.pattern('[0-9]{2}-[0-9]{3}'),\n        ],\n      }),\n      shipperCity: new FormControl('aaa', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(17),\n        ],\n      }),\n      shipperStreet: new FormControl('aaa', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(35),\n        ],\n      }),\n      shipperHouseNumber: new FormControl('aaa', {\n        validators: [Validators.required, Validators.maxLength(10)],\n      }),\n      shipperApartmentNumber: new FormControl(null, {\n        validators: [Validators.maxLength(10)],\n      }),\n      shipperContactPerson: new FormControl(null, {\n        validators: [Validators.maxLength(60)],\n      }),\n      shipperContactPhone: new FormControl(null, {\n        validators: [Validators.maxLength(20)],\n      }),\n      shipperContactEmail: new FormControl(null, {\n        validators: [Validators.email, Validators.maxLength(60)],\n      }),\n      country: new FormControl('PL', {\n        validators: [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(2),\n        ],\n      }),\n      receiverName: new FormControl('bbbbb', {\n        validators: [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(60),\n        ],\n      }),\n      receiverPostalCode: new FormControl(null, {\n        validators: [\n          Validators.required,\n          Validators.pattern('[0-9]{2}-[0-9]{3}'),\n        ],\n      }),\n      receiverCity: new FormControl('bbb', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(17),\n        ],\n      }),\n      receiverStreet: new FormControl('bbb', {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(35),\n        ],\n      }),\n      receiverHouseNumber: new FormControl('bbb', {\n        validators: [Validators.required, Validators.maxLength(10)],\n      }),\n      receiverApartmentNumber: new FormControl(null, {\n        validators: [Validators.maxLength(10)],\n      }),\n      receiverContactPerson: new FormControl(null, {\n        validators: [Validators.maxLength(60)],\n      }),\n      receiverContactPhone: new FormControl(null, {\n        validators: [Validators.maxLength(20)],\n      }),\n      receiverContactEmail: new FormControl(null, {\n        validators: [Validators.email, Validators.maxLength(60)],\n      }),\n      type: new FormControl(`ENVELOPE`, { validators: [Validators.required] }),\n      weight: new FormControl({ value: null, disabled: true }),\n      width: new FormControl({ value: null, disabled: true }),\n      length: new FormControl({ value: null, disabled: true }),\n      height: new FormControl({ value: null, disabled: true }),\n      quantity: new FormControl(1, {\n        validators: [Validators.required, Validators.min(1)],\n      }),\n      nonStandard: new FormControl(null),\n      content: new FormControl('XXX', {\n        validators: [Validators.required, Validators.maxLength(30)],\n      }),\n      comment: new FormControl(null, {\n        validators: [Validators.maxLength(100)],\n      }),\n      CoD: new FormControl(false),\n      CoDValue: new FormControl({ value: null, disabled: true }),\n      insurance: new FormControl(false),\n      insuranceValue: new FormControl({ value: null, disabled: true }),\n    });\n  }\n\n  weekendFilter = (date: Date): boolean => {\n    const day = date.getDay();\n    const saturday = 6;\n    const sunday = 0;\n\n    return day !== saturday && day !== sunday;\n  };\n\n  formatDateForUser(date: Date): string {\n    const day = date\n      .getDate()\n      .toString()\n      .padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    return day + '-' + month + '-' + year;\n  }\n\n  formatDateForDhlApi(date: Date): string {\n    const day = date\n      .getDate()\n      .toString()\n      .padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    return year + '-' + month + '-' + day;\n  }\n\n  setPieceValidators() {\n    const typeControl = this.form.get('type');\n    this.weightControl = this.form.get('weight');\n    this.widthControl = this.form.get('width');\n    this.lengthControl = this.form.get('length');\n    this.heightControl = this.form.get('height');\n\n    typeControl.valueChanges.subscribe((type: string) => {\n      if (type === 'ENVELOPE') {\n        this.weightControl.setValue(null);\n        this.weightControl.disable();\n        this.widthControl.setValue(null);\n        this.widthControl.disable();\n        this.lengthControl.setValue(null);\n        this.lengthControl.disable();\n        this.heightControl.setValue(null);\n        this.heightControl.disable();\n      } else if (type === 'PACKAGE' || type === 'PALLETTE') {\n        this.wMax = this.LONG;\n        this.lMax = this.LONG;\n        this.hMax = this.LONG;\n\n        this.weightControl.enable();\n        this.weightControl.setValidators([\n          Validators.required,\n          Validators.max(this.MAX_WEIGHT),\n        ]);\n        this.setWeightListener();\n\n        this.widthControl.enable();\n        this.lengthControl.enable();\n        this.heightControl.enable();\n        this.setDimensionsValidators();\n      }\n    });\n  }\n\n  setDimensionsValidators() {\n    this.widthControl.valueChanges.subscribe((width: number) => {\n      if (width > this.SHORT) {\n        if (\n          this.lengthControl.value <= this.SHORT &&\n          this.heightControl.value <= this.SHORT\n        ) {\n          this.wMax = this.LONG;\n          this.lMax = this.SHORT;\n          this.hMax = this.SHORT;\n        } else {\n          this.wMax = this.SHORT;\n          if (this.lengthControl.value > this.SHORT) {\n            this.lMax = this.LONG;\n            this.hMax = this.SHORT;\n          } else if (this.heightControl.value > this.SHORT) {\n            this.lMax = this.SHORT;\n            this.hMax = this.LONG;\n          }\n        }\n      } else {\n        if (this.lengthControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.LONG;\n          this.hMax = this.SHORT;\n        } else if (this.heightControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.SHORT;\n          this.hMax = this.LONG;\n        } else {\n          this.wMax = this.LONG;\n          this.lMax = this.LONG;\n          this.hMax = this.LONG;\n        }\n      }\n      this.updateDimensionsValidators();\n    });\n\n    this.lengthControl.valueChanges.subscribe((length: number) => {\n      if (length > this.SHORT) {\n        if (\n          this.widthControl.value <= this.SHORT &&\n          this.heightControl.value <= this.SHORT\n        ) {\n          this.wMax = this.SHORT;\n          this.lMax = this.LONG;\n          this.hMax = this.SHORT;\n        } else {\n          this.lMax = this.SHORT;\n          if (this.widthControl.value > this.SHORT) {\n            this.wMax = this.LONG;\n            this.hMax = this.SHORT;\n          } else if (this.heightControl.value > this.SHORT) {\n            this.wMax = this.SHORT;\n            this.hMax = this.LONG;\n          }\n        }\n      } else {\n        if (this.widthControl.value > this.SHORT) {\n          this.wMax = this.LONG;\n          this.lMax = this.SHORT;\n          this.hMax = this.SHORT;\n        } else if (this.heightControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.SHORT;\n          this.hMax = this.LONG;\n        } else {\n          this.wMax = this.LONG;\n          this.lMax = this.LONG;\n          this.hMax = this.LONG;\n        }\n      }\n      this.updateDimensionsValidators();\n    });\n\n    this.heightControl.valueChanges.subscribe((height: number) => {\n      if (height > this.SHORT) {\n        if (\n          this.widthControl.value <= this.SHORT &&\n          this.lengthControl.value <= this.SHORT\n        ) {\n          this.wMax = this.SHORT;\n          this.lMax = this.SHORT;\n          this.hMax = this.LONG;\n        } else {\n          this.hMax = this.SHORT;\n          if (this.widthControl.value > this.SHORT) {\n            this.wMax = this.LONG;\n            this.lMax = this.SHORT;\n          } else if (this.lengthControl.value > this.SHORT) {\n            this.wMax = this.SHORT;\n            this.lMax = this.LONG;\n          }\n        }\n      } else {\n        if (this.widthControl.value > this.SHORT) {\n          this.wMax = this.LONG;\n          this.lMax = this.SHORT;\n          this.hMax = this.SHORT;\n        } else if (this.lengthControl.value > this.SHORT) {\n          this.wMax = this.SHORT;\n          this.lMax = this.LONG;\n          this.hMax = this.SHORT;\n        } else {\n          this.wMax = this.LONG;\n          this.lMax = this.LONG;\n          this.hMax = this.LONG;\n        }\n      }\n      this.updateDimensionsValidators();\n    });\n  }\n\n  updateDimensionsValidators() {\n    this.updateDimensionValidators(this.widthControl, this.wMax);\n    this.updateDimensionValidators(this.lengthControl, this.lMax);\n    this.updateDimensionValidators(this.heightControl, this.hMax);\n    this.determineSize();\n  }\n\n  updateDimensionValidators(dimensionControl, maxValue) {\n    dimensionControl.setValidators([\n      Validators.required,\n      Validators.max(maxValue),\n    ]);\n    dimensionControl.updateValueAndValidity({ emitEvent: false });\n  }\n\n  setWeightListener() {\n    this.weightControl.valueChanges.subscribe((weight: number) => {\n      this.weightControl.updateValueAndValidity({ emitEvent: false });\n      this.determineSize();\n    });\n  }\n\n  determineSize() {\n    this.weight = this.weightControl.value;\n    this.width = this.widthControl.value;\n    this.length = this.lengthControl.value;\n    this.height = this.heightControl.value;\n\n    if (this.weight && this.width && this.length && this.height) {\n      let min =\n        this.width < this.length\n          ? this.width < this.height\n            ? this.width\n            : this.height\n          : this.length < this.height\n          ? this.length\n          : this.height;\n      let max =\n        this.width > this.length\n          ? this.width > this.height\n            ? this.width\n            : this.height\n          : this.length > this.height\n          ? this.length\n          : this.height;\n      if (this.weight < this.LIGHT && min + max < this.SMALL) {\n        this.size = 'super lekka';\n      } else if (this.weight < this.HEAVY && min + max < this.LARGE) {\n        this.size = 'lekka';\n      } else {\n        this.size = 'ciężka';\n      }\n    } else {\n      this.size = null;\n    }\n  }\n\n  setServiceValidators() {\n    const CoD = this.form.get('CoD');\n    const CoDValue = this.form.get('CoDValue');\n\n    CoD.valueChanges.subscribe((selected: boolean) => {\n      if (selected) {\n        CoDValue.enable();\n        CoDValue.setValidators([\n          Validators.required,\n          Validators.min(1),\n          Validators.max(insuranceValue.value),\n        ]);\n        insurance.setValue(true);\n        insurance.setValidators(Validators.required);\n        insuranceValue.updateValueAndValidity;\n      } else if (!selected) {\n        CoDValue.setValue(null);\n        CoDValue.disable();\n        insurance.clearValidators();\n      }\n      CoDValue.updateValueAndValidity;\n      insurance.updateValueAndValidity;\n    });\n\n    CoDValue.valueChanges.subscribe((value: number) => {\n      if (value > insuranceValue.value) {\n        insuranceValue.setValue(value);\n      }\n      insuranceValue.setValidators([\n        Validators.required,\n        Validators.min(CoDValue.value),\n        Validators.max(11000),\n      ]);\n      insuranceValue.updateValueAndValidity;\n    });\n\n    const insurance = this.form.get('insurance');\n    const insuranceValue = this.form.get('insuranceValue');\n\n    insurance.valueChanges.subscribe((selected: boolean) => {\n      if (selected) {\n        insuranceValue.enable();\n        insuranceValue.setValidators([\n          Validators.required,\n          Validators.min(CoDValue.value),\n          Validators.max(11000),\n        ]);\n      } else if (!selected) {\n        if (!selected && CoD.value) {\n          CoD.setValue(false);\n        }\n        insuranceValue.setValue(null);\n        insuranceValue.disable();\n        CoD.updateValueAndValidity;\n      }\n      insuranceValue.updateValueAndValidity;\n    });\n  }\n\n  onCreate() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n\n    const userId = this.authService.getUserId();\n    const login = this.authService.getLogin();\n    const form = this.form.value;\n    const payerType: string = form.payerType;\n    const pickedDate: Date = form.shipmentDate;\n    const shipmentDateTime = new Date(\n      pickedDate.getFullYear(),\n      pickedDate.getMonth(),\n      pickedDate.getDate(),\n      new Date().getHours(),\n      new Date().getMinutes(),\n      new Date().getSeconds()\n    ).toLocaleString('pl-PL');\n    const shipmentDate: string = this.formatDateForDhlApi(pickedDate);\n    const service: Service = {\n      CoD: form.CoD ? form.CoD : '',\n      CoDValue: form.CoDValue ? form.CoDValue : '',\n      insurance: form.insurance ? form.insurance : '',\n      insuranceValue: form.insuranceValue ? form.insuranceValue : '',\n    };\n    const shipper: ShipperAddress = {\n      name: form.shipperName,\n      postalCode: form.shipperPostalCode.replace('-', ''),\n      city: form.shipperCity,\n      street: form.shipperStreet,\n      houseNumber: form.shipperHouseNumber,\n      apartmentNumber: form.shipperApartmentNumber\n        ? form.shipperApartmentNumber.toString()\n        : '',\n      contactPerson: form.shipperContactPerson ? form.shipperContactPerson : '',\n      contactPhone: form.shipperContactPhone ? form.shipperContactPhone : '',\n      contactEmail: form.shipperContactEmail ? form.shipperContactEmail : '',\n    };\n    const receiver: ReceiverAddress = {\n      country: form.country,\n      name: form.receiverName,\n      postalCode: form.receiverPostalCode.replace('-', ''),\n      city: form.receiverCity,\n      street: form.receiverStreet,\n      houseNumber: form.receiverHouseNumber,\n      apartmentNumber: form.receiverApartmentNumber\n        ? form.receiverApartmentNumber.toString()\n        : '',\n      contactPerson: form.receiverContactPerson\n        ? form.receiverContactPerson\n        : '',\n      contactPhone: form.receiverContactPhone ? form.receiverContactPhone : '',\n      contactEmail: form.receiverContactEmail ? form.receiverContactEmail : '',\n    };\n    const piece: Piece = {\n      type: form.type,\n      weight: form.weight ? form.weight : '',\n      width: form.width ? form.width : '',\n      length: form.length ? form.length : '',\n      height: form.height ? form.height : '',\n      quantity: form.quantity,\n      nonStandard: form.nonStandard ? true : false,\n    };\n    const comment: string = form.comment ? form.comment : '';\n    const content: string = form.content;\n    const consignment: Consignment = {\n      userId: userId,\n      login: login,\n      shipper: shipper,\n      receiver: receiver,\n      piece: piece,\n      payerType: payerType,\n      service: service,\n      shipmentDate: shipmentDate,\n      comment: comment,\n      content: content,\n      shipmentDateTime: shipmentDateTime,\n    };\n    this.consignmentsService.createConsignment(consignment).then(response => {\n      this.isLoading = false;\n      if (response.status === 400) {\n        this.toastService.showToast('Coś poszło nie tak   ; /');\n      } else {\n        this.form.reset();\n        const consignmentId = response.consignmentId;\n        this.toastService.showToast(response.message);\n        this.router.navigate(['consignments', consignmentId]);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<h1 class=\"mat-title\">nowa przesyłka krajowa</h1>\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<form\n  id=\"newConsignment\"\n  [formGroup]=\"form\"\n  (submit)=\"onCreate()\"\n  *ngIf=\"!isLoading\"\n>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>płatnik</mat-label>\n    <mat-select formControlName=\"payerType\">\n      <!-- to jako enum, do klasy -->\n      <mat-option value=\"SHIPPER\">nadawca</mat-option>\n      <mat-option value=\"RECEIVER\">odbiorca</mat-option>\n      <mat-option value=\"USER\">trzecia strona?</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"form.get('payerType').invalid && form.get('payerType').touched\"\n      >pole wymaga wyboru</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>data nadania</mat-label>\n    <!-- do poprawy format daty z MM/DD/RRRR na DD/MM/RRRR! -->\n    <input\n      matInput\n      [matDatepicker]=\"picker\"\n      formControlName=\"shipmentDate\"\n      [min]=\"minDate\"\n      [max]=\"maxDate\"\n      [matDatepickerFilter]=\"weekendFilter\"\n      (focus)=\"sdState = true\"\n      (focusout)=\"sdState = false\"\n      class=\"number\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n    <mat-error\n      *ngIf=\"\n        form.get('shipmentDate').invalid && form.get('shipmentDate').touched\n      \"\n      >wymagana data od {{ this.formatDateForUser(minDate) }} do\n      {{ this.formatDateForUser(maxDate) }}, format: M/D/RRRR</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">nadawca:</h3>\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>nazwa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperName\"\n      #shipperName\n      maxlength=\"60\"\n      (keyup)=\"shipperName.value = trimDoubleSpace(shipperName.value)\"\n      (focus)=\"snState = true\"\n      (focusout)=\"snState = false\"\n    />\n    <mat-hint *ngIf=\"snState\" align=\"end\"\n      >{{ shipperName.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperName').invalid &&\n        form.get('shipperName').touched &&\n        !snState\n      \"\n      >min. 5, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>ulica</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperStreet\"\n      #shipperStreet\n      maxlength=\"35\"\n      (keyup)=\"shipperStreet.value = trimDoubleSpace(shipperStreet.value)\"\n      (focus)=\"ssState = true\"\n      (focusout)=\"ssState = false\"\n    />\n    <mat-hint *ngIf=\"ssState\" align=\"end\"\n      >{{ shipperStreet.value?.length || 0 }}/35 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperStreet').invalid &&\n        form.get('shipperStreet').touched &&\n        !ssState\n      \"\n      >min. 3, max. 35 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>dom</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperHouseNumber\"\n      #shipperHouseNumber\n      maxlength=\"10\"\n      (keyup)=\"\n        shipperHouseNumber.value = trimDoubleSpace(shipperHouseNumber.value)\n      \"\n      (focus)=\"shState = true\"\n      (focusout)=\"shState = false\"\n    />\n    <mat-hint *ngIf=\"shState\" align=\"end\"\n      >{{ shipperHouseNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperHouseNumber').invalid &&\n        form.get('shipperHouseNumber').touched &&\n        !ssState\n      \"\n      >min. 1, max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>lokal</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      min=\"1\"\n      formControlName=\"shipperApartmentNumber\"\n      #shipperApartmentNumber\n      (keyup)=\"\n        shipperApartmentNumber.value = maxTenDigit(shipperApartmentNumber.value)\n      \"\n      (focus)=\"saState = true\"\n      (focusout)=\"saState = false\"\n    />\n    <mat-hint *ngIf=\"saState\" align=\"end\"\n      >{{ shipperApartmentNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperApartmentNumber').invalid &&\n        form.get('shipperApartmentNumber').touched &&\n        !saState\n      \"\n      >max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kod pocztowy</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"shipperPostalCode\"\n      #shipperPostalCode\n      maxlength=\"6\"\n      (keydown)=\"\n        shipperPostalCode.value = formatPostalCode(shipperPostalCode.value)\n      \"\n      (keyup)=\"\n        shipperPostalCode.value = formatPostalCode(shipperPostalCode.value)\n      \"\n      (focus)=\"spcState = true\"\n      (focusout)=\"spcState = false\"\n    />\n    <mat-hint *ngIf=\"spcState\" align=\"end\">format: 12-345</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('shipperPostalCode').invalid &&\n        form.get('shipperPostalCode').touched &&\n        !spcState\n      \"\n      >format: 12-345</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>miejscowość</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperCity\"\n      #shipperCity\n      maxlength=\"17\"\n      (keyup)=\"shipperCity.value = trimDoubleSpaceAndNumber(shipperCity.value)\"\n      (focus)=\"scState = true\"\n      (focusout)=\"scState = false\"\n    />\n    <mat-hint *ngIf=\"scState\" align=\"end\"\n      >{{ shipperCity.value?.length || 0 }}/17 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperCity').invalid &&\n        form.get('shipperCity').touched &&\n        !scState\n      \"\n      >min. 3, max. 17 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>osoba kontaktowa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"shipperContactPerson\"\n      #shipperContactPerson\n      maxlength=\"60\"\n      (keyup)=\"\n        shipperContactPerson.value = trimDoubleSpace(shipperContactPerson.value)\n      \"\n      (focus)=\"scpState = true\"\n      (focusout)=\"scpState = false\"\n    />\n    <mat-hint *ngIf=\"scpState\" align=\"end\"\n      >{{ shipperContactPerson.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperContactPerson').invalid &&\n        form.get('shipperContactPerson').touched &&\n        !scpState\n      \"\n      >max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>telefon</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"shipperContactPhone\"\n      #shipperContactPhone\n      maxlength=\"20\"\n      (keyup)=\"\n        shipperContactPhone.value = trimDoubleSpaceAndNotNumber(\n          shipperContactPhone.value\n        )\n      \"\n      (focus)=\"scphState = true\"\n      (focusout)=\"scphState = false\"\n    />\n    <mat-hint *ngIf=\"scphState\" align=\"end\"\n      >{{ shipperContactPhone.value?.length || 0 }}/20 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperContactPhone').invalid &&\n        form.get('shipperContactPhone').touched &&\n        !scphState\n      \"\n      >max. 20 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>email</mat-label>\n    <input\n      matInput\n      type=\"email\"\n      formControlName=\"shipperContactEmail\"\n      #shipperContactEmail\n      maxlength=\"60\"\n      (focus)=\"sceState = true\"\n      (focusout)=\"sceState = false\"\n    />\n    <mat-hint *ngIf=\"sceState\" align=\"end\"\n      >{{ shipperContactEmail.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('shipperContactEmail').invalid &&\n        form.get('shipperContactEmail').touched &&\n        !sceState\n      \"\n      >format: email, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">odbiorca:</h3>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kraj</mat-label>\n    <mat-select\n      formControlName=\"country\"\n      #country\n      (focus)=\"cState = true\"\n      (focusout)=\"cState = false\"\n    >\n      <mat-option value=\"PL\">Polska</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        form.get('country').invalid && form.get('country').touched && !cState\n      \"\n      >pole wymaga wyboru</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>nazwa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverName\"\n      #receiverName\n      maxlength=\"60\"\n      (keyup)=\"receiverName.value = trimDoubleSpace(receiverName.value)\"\n      (focus)=\"rnState = true\"\n      (focusout)=\"rnState = false\"\n    />\n    <mat-hint *ngIf=\"rnState\" align=\"end\"\n      >{{ receiverName.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverName').invalid &&\n        form.get('receiverName').touched &&\n        !rnState\n      \"\n      >min. 5, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>ulica</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverStreet\"\n      #receiverStreet\n      maxlength=\"35\"\n      (keyup)=\"receiverStreet.value = trimDoubleSpace(receiverStreet.value)\"\n      (focus)=\"rsState = true\"\n      (focusout)=\"rsState = false\"\n    />\n    <mat-hint *ngIf=\"rsState\" align=\"end\"\n      >{{ receiverStreet.value?.length || 0 }}/35 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverStreet').invalid &&\n        form.get('receiverStreet').touched &&\n        !rsState\n      \"\n      >min. 3, max. 35 znakóww</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>dom</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverHouseNumber\"\n      #receiverHouseNumber\n      maxlength=\"10\"\n      (keyup)=\"\n        receiverHouseNumber.value = trimDoubleSpace(receiverHouseNumber.value)\n      \"\n      (focus)=\"rhState = true\"\n      (focusout)=\"rhState = false\"\n    />\n    <mat-hint *ngIf=\"rhState\" align=\"end\"\n      >{{ receiverHouseNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverHouseNumber').invalid &&\n        form.get('receiverHouseNumber').touched &&\n        !rhState\n      \"\n      >min. 1, max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"veryShort\">\n    <mat-label>lokal</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      min=\"1\"\n      formControlName=\"receiverApartmentNumber\"\n      #receiverApartmentNumber\n      (keyup)=\"\n        receiverApartmentNumber.value = maxTenDigit(\n          receiverApartmentNumber.value\n        )\n      \"\n      (focus)=\"raState = true\"\n      (focusout)=\"raState = false\"\n    />\n    <mat-hint *ngIf=\"raState\" align=\"end\"\n      >{{ receiverApartmentNumber.value?.length || 0 }}/10 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverApartmentNumber').invalid &&\n        form.get('receiverApartmentNumber').touched &&\n        !raState\n      \"\n      >max. 10 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kod pocztowy</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"receiverPostalCode\"\n      #receiverPostalCode\n      maxlength=\"6\"\n      (keydown)=\"\n        receiverPostalCode.value = formatPostalCode(receiverPostalCode.value)\n      \"\n      (keyup)=\"\n        receiverPostalCode.value = formatPostalCode(receiverPostalCode.value)\n      \"\n      (focus)=\"rpcState = true\"\n      (focusout)=\"rpcState = false\"\n    />\n    <mat-hint *ngIf=\"rpcState\" align=\"end\">format: 12-345</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('receiverPostalCode').invalid &&\n        form.get('receiverPostalCode').touched &&\n        !rpcState\n      \"\n      >format: 12-345</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>miejscowość</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverCity\"\n      #receiverCity\n      maxlength=\"17\"\n      (keyup)=\"\n        receiverCity.value = trimDoubleSpaceAndNumber(receiverCity.value)\n      \"\n      (focus)=\"rcState = true\"\n      (focusout)=\"rcState = false\"\n    />\n    <mat-hint *ngIf=\"rcState\" align=\"end\"\n      >{{ receiverCity.value?.length || 0 }}/17 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverCity').invalid &&\n        form.get('receiverCity').touched &&\n        !rcState\n      \"\n      >min. 3, max. 17 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>osoba kontaktowa</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"receiverContactPerson\"\n      #receiverContactPerson\n      maxlength=\"60\"\n      (keyup)=\"\n        receiverContactPerson.value = trimDoubleSpace(\n          receiverContactPerson.value\n        )\n      \"\n      (focus)=\"rcpState = true\"\n      (focusout)=\"rcpState = false\"\n    />\n    <mat-hint *ngIf=\"rcpState\" align=\"end\"\n      >{{ receiverContactPerson.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverContactPerson').invalid &&\n        form.get('receiverContactPerson').touched &&\n        !rcpState\n      \"\n      >max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>telefon</mat-label>\n    <input\n      matInput\n      type=\"tel\"\n      formControlName=\"receiverContactPhone\"\n      #receiverContactPhone\n      maxlength=\"20\"\n      (keyup)=\"\n        receiverContactPhone.value = trimDoubleSpaceAndNotNumber(\n          receiverContactPhone.value\n        )\n      \"\n      (focus)=\"rcphState = true\"\n      (focusout)=\"rcphState = false\"\n    />\n    <mat-hint *ngIf=\"rcphState\" align=\"end\"\n      >{{ receiverContactPhone.value?.length || 0 }}/20 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverContactPhone').invalid &&\n        form.get('receiverContactPhone').touched &&\n        !rcphState\n      \"\n      >max. 20 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>email</mat-label>\n    <input\n      matInput\n      type=\"email\"\n      formControlName=\"receiverContactEmail\"\n      #receiverContactEmail\n      maxlength=\"60\"\n      (focus)=\"rceState = true\"\n      (focusout)=\"rceState = false\"\n    />\n    <mat-hint *ngIf=\"rceState\" align=\"end\"\n      >{{ receiverContactEmail.value?.length || 0 }}/60 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('receiverContactEmail').invalid &&\n        form.get('receiverContactEmail').touched &&\n        !rceState\n      \"\n      >format: email, max. 60 znaków</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">paczka:</h3>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>rodzaj</mat-label>\n    <mat-select\n      formControlName=\"type\"\n      #type\n      (focus)=\"tState = true\"\n      (focusout)=\"tState = false\"\n    >\n      <mat-option value=\"PACKAGE\">paczka</mat-option>\n      <mat-option value=\"PALLETTE\">paleta</mat-option>\n      <mat-option value=\"ENVELOPE\">koperta</mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"form.get('type').invalid && form.get('type').touched && !tState\"\n      >pole wymaga wyboru</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>waga</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"weight\"\n      #weight\n      (keyup)=\"weight.value = trimComma(weight.value)\"\n      (focus)=\"weState = true\"\n      (focusout)=\"weState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"weState || form.get('weight').value != null\" matSuffix\n      >kg</span\n    >\n    <mat-hint *ngIf=\"weState\" align=\"end\">max 31kg</mat-hint>\n    <mat-error *ngIf=\"form.get('weight').invalid && form.get('weight').touched\"\n      >max. 31kg</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>długość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"width\"\n      #width\n      (keyup)=\"width.value = trimComma(width.value)\"\n      (focus)=\"wiState = true\"\n      (focusout)=\"wiState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"wiState || form.get('width').value != null\" matSuffix>cm</span>\n    <mat-hint *ngIf=\"wiState\" align=\"end\">max {{ wMax }}cm</mat-hint>\n    <mat-error *ngIf=\"form.get('width').invalid && form.get('width').touched\"\n      >max. {{ wMax }}cm</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>szerokość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"length\"\n      #length\n      (keyup)=\"length.value = trimComma(length.value)\"\n      (focus)=\"lState = true\"\n      (focusout)=\"lState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"lState || form.get('length').value != null\" matSuffix>cm</span>\n    <mat-hint *ngIf=\"lState\" align=\"end\">max {{ lMax }}cm</mat-hint>\n    <mat-error *ngIf=\"form.get('length').invalid && form.get('length').touched\"\n      >max. {{ lMax }}cm</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>wysokość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"height\"\n      #height\n      (keyup)=\"height.value = trimComma(height.value)\"\n      (focus)=\"hState = true\"\n      (focusout)=\"hState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"hState || form.get('height').value != null\" matSuffix>cm</span>\n    <mat-hint *ngIf=\"hState\" align=\"end\">max {{ hMax }}cm</mat-hint>\n    <mat-error *ngIf=\"form.get('height').invalid && form.get('height').touched\"\n      >max. {{ hMax }}cm</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>liczba</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"quantity\"\n      #quantity\n      (keyup)=\"quantity.value = trimComma(quantity.value)\"\n      (focus)=\"qState = true\"\n      (focusout)=\"qState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"qState || form.get('quantity').value != null\" matSuffix\n      >szt.</span\n    >\n    <mat-hint *ngIf=\"qState\" align=\"end\">min 1 szt.</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('quantity').invalid && form.get('quantity').touched && !qState\n      \"\n      >min. 1</mat-error\n    >\n    <mat-checkbox formControlName=\"nonStandard\" labelPosition=\"before\"\n      >nonStandard</mat-checkbox\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"medium\">\n    <mat-label>zawartość</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      formControlName=\"content\"\n      #content\n      maxlength=\"30\"\n      (keyup)=\"content.value = trimDoubleSpace(content.value)\"\n      (focus)=\"cnState = true\"\n      (focusout)=\"cnState = false\"\n    />\n    <mat-hint *ngIf=\"cnState\" align=\"end\"\n      >{{ content.value?.length || 0 }}/30 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('content').invalid && form.get('content').touched && !cnState\n      \"\n      >max. 30 znaków</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <mat-form-field appearance=\"fill\" class=\"long\">\n    <mat-label>uwagi</mat-label>\n    <textarea\n      matInput\n      type=\"text\"\n      formControlName=\"comment\"\n      #comment\n      maxlength=\"100\"\n      (keyup)=\"content.value = trimDoubleSpace(content.value)\"\n      (focus)=\"cmState = true\"\n      (focusout)=\"cmState = false\"\n    >\n    </textarea>\n    <mat-hint *ngIf=\"cmState\" align=\"end\"\n      >{{ comment.value?.length || 0 }}/100 znaków</mat-hint\n    >\n    <mat-error\n      *ngIf=\"\n        form.get('comment').invalid && form.get('comment').touched && !cmState\n      \"\n      >max. 100 znaków</mat-error\n    >\n  </mat-form-field>\n\n  <h3 class=\"mat-h3\">usługi dodatkowe:</h3>\n  <mat-checkbox formControlName=\"CoD\" labelPosition=\"before\">\n    za pobraniem\n  </mat-checkbox>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>kwota</mat-label>\n    <!-- format lokalny w Polsce odcina części dziesiętne przecinkiem a nie kropką, a tysiące - spacją -->\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"CoDValue\"\n      #CoDValue\n      (focus)=\"cvState = true\"\n      (focusout)=\"cvState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"cvState || form.get('CoDValue').value != null\" matSuffix\n      >zł</span\n    >\n    <mat-hint *ngIf=\"cvState\" align=\"end\">max 11000.00zł</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('CoDValue').invalid && form.get('CoDValue').touched && !cvState\n      \"\n      >format 123.45zł</mat-error\n    >\n  </mat-form-field>\n  <mat-checkbox formControlName=\"insurance\" labelPosition=\"before\">\n    ubezpieczenie przesyłki\n  </mat-checkbox>\n  <mat-form-field appearance=\"fill\" class=\"short\">\n    <mat-label>wartość</mat-label>\n    <input\n      matInput\n      type=\"number\"\n      formControlName=\"insuranceValue\"\n      #insuranceValue\n      (focus)=\"ivState = true\"\n      (focusout)=\"ivState = false\"\n      class=\"right-align number\"\n    />\n    <span *ngIf=\"ivState || form.get('insuranceValue').value != null\" matSuffix\n      >zł</span\n    >\n    <mat-hint *ngIf=\"ivState\" align=\"end\">format: 1234.56zł</mat-hint>\n    <mat-error\n      *ngIf=\"\n        form.get('insuranceValue').invalid &&\n        form.get('insuranceValue').touched &&\n        !ivState\n      \"\n      >format: 123.45zł, nie mniej niż pobranie</mat-error\n    >\n  </mat-form-field>\n\n  <div>\n    <button\n      mat-raised-button\n      color=\"accent\"\n      type=\"submit\"\n      [disabled]=\"!form.valid\"\n    >\n      utwórz przesyłkę\n    </button>\n    <!-- nałożyć style żeby wyświetlać chips'a obok guzików -->\n    <mat-chip-list>\n      <mat-chip *ngIf=\"size\" color=\"primary\" selected>\n        {{ size }} paczka DHL\n      </mat-chip>\n    </mat-chip-list>\n  </div>\n  <div>\n    <button mat-raised-button color=\"accent\" disabled>\n      zamów kuriera\n    </button>\n  </div>\n</form>\n","import {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Directive({\n  selector: '[cdkDetailRow]',\n})\nexport class CdkDetailRowDirective {\n  private row: any;\n  private tRef: TemplateRef<any>;\n  private opened: boolean;\n\n  @HostBinding('class.expanded')\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input()\n  set cdkDetailRow(value: any) {\n    if (value !== this.row) {\n      this.row = value;\n    }\n  }\n\n  @Input('cdkDetailRowTpl')\n  set template(value: TemplateRef<any>) {\n    if (value !== this.tRef) {\n      this.tRef = value;\n    }\n  }\n\n  constructor(public vcRef: ViewContainerRef) {}\n\n  @HostListener('click')\n  onClick(): void {\n    this.toggle();\n  }\n\n  toggle(): void {\n    if (this.opened) {\n      this.vcRef.clear();\n    } else {\n      this.render();\n    }\n    this.opened = this.vcRef.length > 0;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.tRef && this.row) {\n      this.vcRef.createEmbeddedView(this.tRef, { $implicit: this.row });\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  MatPaginator,\n  MatTableDataSource,\n  MatSort,\n  Sort,\n} from '@angular/material';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { ConsignmentsService } from '../consignments.service';\nimport { Consignment } from '../model/consignment.model';\nimport { environment } from '../../../environments/environment';\n\nconst SERVER_URL = environment.serverUrl;\n\n@Component({\n  selector: 'app-consignment-list',\n  templateUrl: './consignment-list.component.html',\n  styleUrls: ['./consignment-list.component.css'],\n})\nexport class ConsignmentListComponent implements OnInit, OnDestroy {\n  private authStatusSub: Subscription;\n  isAuthenticated = false;\n  isLoading: boolean;\n  pageEvent;\n  displayedColumns: string[] = [\n    'select',\n    'consignmentId',\n    'login',\n    'shipperName',\n    'receiverName',\n    'status',\n    'shipmentDateTime',\n    'action',\n  ];\n  detailColumns = this.displayedColumns.length - 1;\n  consignments;\n  dataSource: any;\n  selection = new SelectionModel<Consignment>(true, []);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    public consignmentsService: ConsignmentsService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.isAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.isAuthenticated = isAuthenticated;\n      });\n    this.listConsignments();\n  }\n\n  listConsignments() {\n    this.consignmentsService.listConsignments().then(response => {\n      this.isLoading = false;\n      this.consignments = response.consignments;\n      this.dataSource = new MatTableDataSource<any>(this.consignments);\n      this.dataSource.paginator = this.paginator;\n      const sortState: Sort = {\n        active: 'shipmentDateTime',\n        direction: 'desc',\n      };\n      this.sort.active = sortState.active;\n      this.sort.direction = sortState.direction;\n      this.sort.sortChange.emit(sortState);\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  isExpansionDetailRow = row => row.hasOwnProperty('detailRow');\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n\n  showDetails(shipmentId: string) {\n    this.router.navigate(['./consignments/' + shipmentId]);\n  }\n\n  deleteSelected() {\n    let selectedConsignments = [];\n    this.selection.selected.forEach(el => {\n      selectedConsignments.push(el.consignmentId);\n    });\n    this.consignmentsService.deleteConsignments(selectedConsignments).then(\n      () => {\n        this.listConsignments();\n      },\n      error => {}\n    );\n  }\n\n  handlePage(event: any) {\n    if (this.selection.selected.length > event.pageSize) {\n      this.selection.clear();\n      this.selectRows();\n    }\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.paginator.length;\n    const pageSize = this.dataSource.paginator.pageSize;\n\n    return numSelected === numRows || numSelected === pageSize ? true : false;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ? this.selection.clear() : this.selectRows();\n  }\n\n  selectRows() {\n    this.dataSource\n      ._pageData(this.dataSource._orderData(this.dataSource.filteredData))\n      .forEach(row => this.selection.select(row));\n  }\n\n  onLabelPrint(consignmentId) {\n    this.isLoading = true;\n    // teraz, aby pobrać etykietę, backend pobiera z dhl całą przesyłkę i generuje pdfa (za każdym razem!)\n    // a mógłby sprawdzić, czy plik jest już w /files i stamtąd pobrać\n    // a w sumie etykieta pobierana będzie dla każdej utworzonej przesyłki więc może generować ją przy tworzeniu przesyłki i adres do etykiety zapisywać w db?\n    // a może pdf'a zapisywać w db?\n    this.consignmentsService.getConsignment(consignmentId).then(\n      data => {\n        let labelPath = SERVER_URL + data.labelPath;\n        this.isLoading = false;\n        window.open(labelPath, '_blank');\n      },\n      error => {}\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<div *ngIf=\"isAuthenticated\">\n  <h1 class=\"mat-title\">lista przesyłek</h1>\n  <mat-form-field class=\"filter\">\n    <input\n      matInput\n      (keyup)=\"applyFilter($event.target.value)\"\n      placeholder=\"wyszukaj przesyłkę\"\n    />\n  </mat-form-field>\n  <div class=\"list-container\">\n    <mat-table #table [dataSource]=\"dataSource\" matSort>\n      <ng-container matColumnDef=\"select\" class=\"mat-col-checkbox\">\n        <mat-header-cell *matHeaderCellDef>\n          <mat-checkbox\n            (change)=\"$event ? masterToggle() : null\"\n            [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n          ></mat-checkbox>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation()\">\n          <mat-checkbox\n            (change)=\"$event ? selection.toggle(element) : null\"\n            [checked]=\"selection.isSelected(element)\"\n          ></mat-checkbox>\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"consignmentId\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          id przesyłki\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{\n          element.consignmentId\n        }}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"login\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          użytkownik\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{ element.login }}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"shipperName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          nadawca\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">{{ element.shipperName }}</mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"receiverName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          odbiorca\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          {{ element.receiverName }}\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          status\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          {{ element.trackAndTraceInfo[0].status }}\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"shipmentDateTime\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>\n          data nadania\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          {{ element.shipmentDateTime }}\n        </mat-cell>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button\n            class=\"edit-button\"\n            mat-raised-button\n            color=\"primary\"\n            matTooltip=\"utwórz podobną\"\n            matTooltipPosition=\"above\"\n            (click)=\"$event.stopPropagation()\"\n          >\n            <mat-icon>create</mat-icon>\n          </button>\n          <button\n            class=\"edit-button\"\n            mat-raised-button\n            color=\"primary\"\n            matTooltip=\"wydrukuj etykietę\"\n            matTooltipPosition=\"above\"\n            (click)=\"\n              onLabelPrint(element.consignmentId); $event.stopPropagation()\n            \"\n          >\n            <mat-icon>print</mat-icon>\n          </button>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row\n        *matRowDef=\"let row; columns: displayedColumns\"\n        matRipple\n        class=\"element-row\"\n        [cdkDetailRow]=\"row\"\n        [cdkDetailRowTpl]=\"tpl\"\n      >\n      </mat-row>\n    </mat-table>\n\n    <mat-progress-spinner\n      color=\"primary\"\n      mode=\"indeterminate\"\n      *ngIf=\"isLoading\"\n    >\n    </mat-progress-spinner>\n\n    <mat-toolbar class=\"toolbar\">\n      <mat-toolbar-row>\n        <button\n          *ngIf=\"selection.hasValue()\"\n          mat-button\n          class=\"delete-button\"\n          (click)=\"deleteSelected()\"\n          matTooltip=\"usuń wybrane\"\n          matTooltipPosition=\"above\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        <mat-paginator\n          pageSize=\"10\"\n          [pageSizeOptions]=\"[5, 10, 100]\"\n          (page)=\"pageEvent = handlePage($event)\"\n        ></mat-paginator>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  </div>\n\n  <button mat-raised-button color=\"accent\" routerLink=\"create\">\n    <i class=\"material-icons\">\n      add_circle\n    </i>\n    utwórz nową przesyłkę\n  </button>\n\n  <ng-template #tpl let-element>\n    <div class=\"mat-row detail-row\">\n      <mat-grid-list cols=\"{{ detailColumns }}\">\n        <mat-grid-tile>\n          <p>id {{ element.consignmentId }}</p>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <p>nadawca {{ element.shipperName }}</p>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <p>odbiorca {{ element.receiverName }}</p>\n        </mat-grid-tile>\n        <mat-grid-tile>\n          <ng-container *ngFor=\"let status of element.trackAndTraceInfo\">\n            <div>\n              <p>{{ status.description }}</p>\n              <p>{{ status.timestamp }}</p>\n            </div>\n          </ng-container>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <button\n        mat-button\n        matTooltip=\"szczegóły przesyłki\"\n        (click)=\"showDetails(element.consignmentId)\"\n      >\n        szczegóły\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { MatPaginatorIntl } from '@angular/material/paginator';\n\nconst polishRangeLabel = (page: number, pageSize: number, length: number) => {\n  if (length == 0 || pageSize == 0) {\n    return `0 z ${length}`;\n  }\n\n  length = Math.max(length, 0);\n\n  const startIndex = page * pageSize;\n\n  const endIndex =\n    startIndex < length\n      ? Math.min(startIndex + pageSize, length)\n      : startIndex + pageSize;\n\n  return `${startIndex + 1} - ${endIndex} z ${length}`;\n};\n\nexport function getPolishPaginatorIntl() {\n  const paginatorIntl = new MatPaginatorIntl();\n\n  paginatorIntl.itemsPerPageLabel = 'liczba przesyłek na stronie:';\n  paginatorIntl.nextPageLabel = 'poprzednia strona';\n  paginatorIntl.previousPageLabel = 'następna strona';\n  paginatorIntl.getRangeLabel = polishRangeLabel;\n\n  return paginatorIntl;\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { ConsignmentsService } from '../consignments.service';\nimport { Consignment } from '../model/consignment.model';\nimport { environment } from '../../../environments/environment';\n\nconst SERVER_URL = environment.serverUrl;\n\n@Component({\n  templateUrl: './consignment-show.component.html',\n  styleUrls: ['./consignment-show.component.css'],\n})\nexport class ConsignmentShowComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  consignment: Consignment;\n  private authStatusSub: Subscription;\n\n  constructor(\n    public consignmentsService: ConsignmentsService,\n    public route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe(() => {\n        this.isLoading = false;\n      });\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('consignmentId')) {\n        const consignmentId = paramMap.get('consignmentId');\n        this.isLoading = true;\n        this.getConsignment(consignmentId);\n      } else {\n        this.router.navigate(['/consignments']);\n      }\n    });\n  }\n\n  getConsignment(consignmentId: string) {\n    this.consignmentsService.getConsignment(consignmentId).then(\n      data => {\n        this.isLoading = false;\n        this.consignment = {\n          login: data.login,\n          consignmentId: data.consignmentId,\n          creationDate: data.creationDate,\n          status: data.status,\n          shipper: data.shipper,\n          receiver: data.receiver,\n          piece: data.piece,\n          payerType: data.payerType,\n          service: data.service,\n          shipmentDate: data.shipmentDate,\n          comment: data.comment,\n          content: data.content,\n          labelPath: SERVER_URL + data.labelPath,\n          letterPath: SERVER_URL + data.letterPath,\n          trackAndTraceInfo: data.trackAndTraceInfo,\n        };\n      },\n      error => {}\n    );\n  }\n\n  formatDate(date: Date): string {\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    return day + '-' + month + '-' + year;\n  }\n\n  open(filePath) {\n    window.open(filePath, '_blank');\n  }\n\n  onDelete() {\n    const consignmentId = [this.consignment.consignmentId];\n    this.consignmentsService.deleteConsignments(consignmentId).then(\n      () => {\n        this.router.navigate(['/consignments']);\n      },\n      error => {}\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<h1 class=\"mat-title\">\n  szczegóły przesyłki\n  <span *ngIf=\"!isLoading\">nr {{ consignment?.consignmentId }}</span>\n</h1>\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n<div *ngIf=\"!isLoading\">\n  <div class=\"details-container\">\n    <p>\n      <mat-label>właściciel: {{ consignment?.login }}</mat-label>\n      <br />\n      <mat-label>data: {{ consignment?.shipmentDate }}</mat-label>\n    </p>\n    <br />\n    <h3 class=\"mat-h3\">nadawca:</h3>\n    <p>\n      <mat-label>{{ consignment?.shipper.name }}</mat-label\n      ><br />\n      <mat-label>{{ consignment?.shipper.postalCode }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.city }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.street }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.houseNumber }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.shipper.apartmentNumber }}</mat-label>\n      <ng-container\n        *ngIf=\"\n          consignment?.shipper.contactPerson &&\n          consignment?.shipper.name.toLowerCase() !==\n            consignment?.shipper.contactPerson.toLowerCase()\n        \"\n      >\n        <br />\n        <mat-label>{{ consignment?.shipper.contactPerson }}</mat-label>\n      </ng-container>\n      <ng-container *ngIf=\"consignment?.shipper.contactPhone\">\n        <br /><mat-label>\n          tel.: {{ consignment.shipper.contactPhone }}</mat-label\n        > </ng-container\n      ><br />\n      <mat-label *ngIf=\"consignment?.shipper.contactEmail\"\n        >email: {{ consignment.shipper.contactEmail }}</mat-label\n      >\n    </p>\n    <br />\n    <h3 class=\"mat-h3\">odbiorca:</h3>\n    <p>\n      <mat-label>{{ consignment?.receiver.name }}</mat-label\n      ><br />\n      <mat-label>{{ consignment?.receiver.postalCode }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.city }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.street }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.houseNumber }}</mat-label\n      >&nbsp;<mat-label>{{ consignment?.receiver.apartmentNumber }}</mat-label>\n      <ng-container\n        *ngIf=\"\n          consignment?.receiver.contactPerson &&\n          consignment?.receiver.name.toLowerCase() !==\n            consignment?.receiver.contactPerson.toLowerCase()\n        \"\n      >\n        <br />\n        <mat-label>{{ consignment?.receiver.contactPerson }}</mat-label>\n      </ng-container>\n      <ng-container *ngIf=\"consignment?.receiver.contactPhone\">\n        <br />\n        <mat-label>tel.: {{ consignment?.receiver.contactPhone }}</mat-label>\n      </ng-container>\n      <br />\n      <mat-label *ngIf=\"consignment?.receiver.contactEmail\"\n        >email: {{ consignment?.receiver.contactEmail }}</mat-label\n      >\n    </p>\n    <br />\n    <h3 class=\"mat-h3\">przesyłka:</h3>\n    <p>\n      <mat-label>{{ consignment?.piece.type }}</mat-label\n      ><br />\n      <ng-container *ngIf=\"consignment?.piece.type !== 'ENVELOPE'\">\n        <mat-label>masa: {{ consignment?.piece.weight }}kg</mat-label><br />\n        <mat-label\n          >wymiary: {{ consignment?.piece.width }} x\n          {{ consignment?.piece.length }} x\n          {{ consignment?.piece.height }} [cm]</mat-label\n        ><br />\n        <ng-container *ngIf=\"consignment?.piece.nonStandard\">\n          <mat-label>* paczka niestandardowa</mat-label><br />\n        </ng-container>\n      </ng-container>\n      <mat-label>zawartość: {{ consignment?.content }}</mat-label>\n      <ng-container *ngIf=\"consignment?.comment\">\n        <br />\n        <mat-label>uwagi: {{ consignment.comment }}</mat-label>\n      </ng-container>\n    </p>\n    <ng-container\n      *ngIf=\"consignment?.service.CoD || consignment?.service.insurance\"\n    >\n      <br />\n      <h3 class=\"mat-h3\">opcje:</h3>\n      <p>\n        <ng-container *ngIf=\"consignment.service.CoD\">\n          <mat-label\n            >kwota pobrania: {{ consignment.service.CoDValue }}zł</mat-label\n          ><br />\n        </ng-container>\n        <mat-label *ngIf=\"consignment.service.insurance\"\n          >kwota ubezpieczenia:\n          {{ consignment.service.insuranceValue }}zł</mat-label\n        >\n      </p>\n    </ng-container>\n  </div>\n  <div class=\"stepper-container\">\n    <h3 class=\"mat-h3\">status:</h3>\n    <mat-vertical-stepper #stepper linear>\n      <ng-template matStepperIcon=\"edit\">\n        <mat-icon>done</mat-icon>\n      </ng-template>\n      <ng-container\n        *ngFor=\"\n          let trackAndTraceInfo of consignment?.trackAndTraceInfo\n            .slice()\n            .reverse()\n        \"\n      >\n        <mat-step>\n          <ng-template matStepperIcon=\"number\" matStepLabel\n            >{{ trackAndTraceInfo.status }}\n          </ng-template>\n          <p>{{ trackAndTraceInfo.description }}</p>\n          <p>{{ trackAndTraceInfo.timestamp }}</p>\n        </mat-step>\n      </ng-container>\n    </mat-vertical-stepper>\n  </div>\n  <div class=\"action-container\">\n    <button\n      mat-raised-button\n      [disabled]=\"!consignment.labelPath\"\n      color=\"accent\"\n      (click)=\"open(consignment.labelPath)\"\n    >\n      pokaż etykietę\n    </button>\n    <button\n      mat-raised-button\n      [disabled]=\"!consignment.letterPath\"\n      color=\"accent\"\n      (click)=\"open(consignment.letterPath)\"\n    >\n      pokaż list przewozowy\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"onDelete()\">\n      - usuń przesyłkę\n    </button>\n\n    <div>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        routerLink=\"/consignments/create\"\n      >\n        + utwórz nową\n      </button>\n      <button mat-raised-button color=\"accent\">\n        + utwórz podobną\n      </button>\n    </div>\n    <div>\n      <button mat-raised-button color=\"accent\" disabled>\n        zamów kuriera\n      </button>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConsignmentListComponent } from './consignment-list/consignment-list.component';\nimport { ConsignmentCreateComponent } from './consignment-create/consignment-create.component';\nimport { ConsignmentShowComponent } from './consignment-show/consignment-show.component';\n\nconst routes: Routes = [\n  { path: '', component: ConsignmentListComponent },\n  { path: 'create', component: ConsignmentCreateComponent },\n  { path: ':consignmentId', component: ConsignmentShowComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConsignmentsRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './consignments.component.html',\n})\nexport class ConsignmentsComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConsignmentsComponent } from './consignments.component';\nimport { ConsignmentsRoutingModule } from './consignments-routing.module';\nimport { AngularMaterialModule } from '../material.module';\nimport { ConsignmentCreateComponent } from './consignment-create/consignment-create.component';\nimport { ConsignmentListComponent } from './consignment-list/consignment-list.component';\nimport { CdkDetailRowDirective } from './consignment-list/cdk-detail-row.directive';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { getPolishPaginatorIntl } from './consignment-list/polish-paginator-intl';\nimport { ConsignmentShowComponent } from './consignment-show/consignment-show.component';\n\n@NgModule({\n  declarations: [\n    ConsignmentsComponent,\n    ConsignmentCreateComponent,\n    ConsignmentListComponent,\n    CdkDetailRowDirective,\n    ConsignmentShowComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    ConsignmentsRoutingModule,\n  ],\n  providers: [\n    { provide: MatPaginatorIntl, useValue: getPolishPaginatorIntl() },\n  ],\n})\nexport class ConsignmentsModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth/auth.service';\nimport { ToastService } from '../shared/toast.service';\nimport { Consignment } from './model/consignment.model';\nimport { environment } from '../../environments/environment';\n\nconst BACKEND_URL = environment.apiURL + 'consignments/';\n\n@Injectable({ providedIn: 'root' })\nexport class ConsignmentsService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private toastService: ToastService,\n    private router: Router\n  ) {}\n\n  createConsignment(consignment: Consignment): Promise<any> {\n    return this.http\n      .post<{ message: string; consignmentId: number }>(\n        BACKEND_URL + 'create',\n        consignment\n      )\n      .toPromise()\n      .then(response => {\n        return response;\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  listConsignments(): Promise<any> {\n    const userId = this.authService.getUserId();\n\n    return this.http\n      .post<{ message: string; consignments: [] }>(BACKEND_URL, {\n        userId: userId,\n      })\n      .toPromise()\n      .then(\n        response => {\n          if (!response.consignments) {\n            this.toastService.showToast(response.message);\n          }\n\n          return response;\n        },\n        error => {\n          return error;\n        }\n      );\n  }\n\n  getConsignment(consignmentId) {\n    return this.http\n      .get<{\n        message: string;\n        login: string;\n        consignmentId: number;\n        creationDate: string;\n        status: string;\n        trackAndTraceInfo: [\n          {\n            status: string;\n            description: string;\n            timestamp: string;\n          }\n        ];\n        shipper: {\n          name: string;\n          postalCode: string;\n          city: string;\n          street: string;\n          houseNumber: string;\n          apartmentNumber: string;\n          contactPerson: string;\n          contactPhone: string;\n          contactEmail: string;\n        };\n        receiver: {\n          country: string;\n          name: string;\n          postalCode: string;\n          city: string;\n          street: string;\n          houseNumber: string;\n          apartmentNumber: string;\n          contactPerson: string;\n          contactPhone: string;\n          contactEmail: string;\n        };\n        piece: {\n          type: string;\n          weight: number;\n          width: number;\n          length: number;\n          height: number;\n          quantity: number;\n          nonStandard: boolean;\n        };\n        payerType: string;\n        service: {\n          CoD: boolean;\n          CoDValue: number;\n          insurance: boolean;\n          insuranceValue: number;\n        };\n        shipmentDate: string;\n        comment: string;\n        content: string;\n        labelPath: string;\n        letterPath: string;\n      }>(BACKEND_URL + consignmentId)\n      .toPromise()\n      .then(\n        response => {\n          return response;\n        },\n        error => {\n          this.router.navigate(['/consignments']);\n\n          return error;\n        }\n      );\n  }\n\n  deleteConsignments(selectedConsignments: number[]): Promise<any> {\n    const userId = this.authService.getUserId();\n\n    return this.http\n      .patch<{ message: string; consignmentList: number[] }>(BACKEND_URL, {\n        selectedConsignments,\n        userId,\n      })\n      .toPromise()\n      .then(\n        response => {\n          this.toastService.showToast(response.message);\n\n          return response;\n        },\n        error => {\n          return error;\n        }\n      );\n  }\n}\n"]}